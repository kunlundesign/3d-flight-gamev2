import{B as Oe,a as U,I as Ae,b as Ce,c as Fe,T as We,d as he,e as Pe,V as M,F as Ee,L as Ye,f as J,g as ke,M as G,h as Ge,C as K,i as D,S as $,j as Ze,P as Qe,D as Je,k as te,l as $e,Q as Be,O as De,m as et,n as tt,o as He,N as nt,p as st,q as rt,r as de,s as ve,R as pe,t as it,u as ot,v as at,w as ae,x as ct,y as Ue,z as ut,A as Q,E as lt,G as ft,H as ht,J as dt,K as pt,U as mt,W as gt,X as ce,Y as Tt,Z as xt,_ as At,$ as Rt,a0 as Et,a1 as bt,a2 as yt,a3 as je,a4 as be,a5 as ye,a6 as we,a7 as _e,a8 as Se,a9 as wt,aa as _t,ab as St,ac as Mt}from"./three-C1hlX028.js";function Lt(f,t,e=!0){if(!t||!t.isReady)throw new Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!f.hasAttribute("position")||!f.hasAttribute("normal")||!f.hasAttribute("uv"))throw new Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function i(s){if(s.normalized||s.isInterleavedBufferAttribute){const a=new Float32Array(s.count*s.itemSize);for(let o=0,c=0;o<s.count;o++)a[c++]=s.getX(o),a[c++]=s.getY(o),s.itemSize>2&&(a[c++]=s.getZ(o));return a}return s.array instanceof Float32Array?s.array:new Float32Array(s.array)}const n=f.index?f.toNonIndexed():f,r=t.generateTangents(i(n.attributes.position),i(n.attributes.normal),i(n.attributes.uv));if(e)for(let s=3;s<r.length;s+=4)r[s]*=-1;return n.setAttribute("tangent",new U(r,4)),f!==n&&f.copy(n),f}function It(f,t=!1){const e=f[0].index!==null,i=new Set(Object.keys(f[0].attributes)),n=new Set(Object.keys(f[0].morphAttributes)),r={},s={},a=f[0].morphTargetsRelative,o=new Oe;let c=0;for(let u=0;u<f.length;++u){const l=f[u];let h=0;if(e!==(l.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const d in l.attributes){if(!i.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+d+'" attribute exists among all geometries, or in none of them.'),null;r[d]===void 0&&(r[d]=[]),r[d].push(l.attributes[d]),h++}if(h!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==l.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const d in l.morphAttributes){if(!n.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;s[d]===void 0&&(s[d]=[]),s[d].push(l.morphAttributes[d])}if(t){let d;if(e)d=l.index.count;else if(l.attributes.position!==void 0)d=l.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;o.addGroup(c,d,u),c+=d}}if(e){let u=0;const l=[];for(let h=0;h<f.length;++h){const d=f[h].index;for(let p=0;p<d.count;++p)l.push(d.getX(p)+u);u+=f[h].attributes.position.count}o.setIndex(l)}for(const u in r){const l=me(r[u]);if(!l)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" attribute."),null;o.setAttribute(u,l)}for(const u in s){const l=s[u][0].length;if(l===0)break;o.morphAttributes=o.morphAttributes||{},o.morphAttributes[u]=[];for(let h=0;h<l;++h){const d=[];for(let m=0;m<s[u].length;++m)d.push(s[u][m][h]);const p=me(d);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" morphAttribute."),null;o.morphAttributes[u].push(p)}}return o}function me(f){let t,e,i,n=-1,r=0;for(let c=0;c<f.length;++c){const u=f[c];if(t===void 0&&(t=u.array.constructor),t!==u.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=u.itemSize),e!==u.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=u.normalized),i!==u.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=u.gpuType),n!==u.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;r+=u.count*e}const s=new t(r),a=new U(s,e,i);let o=0;for(let c=0;c<f.length;++c){const u=f[c];if(u.isInterleavedBufferAttribute){const l=o/e;for(let h=0,d=u.count;h<d;h++)for(let p=0;p<e;p++){const m=u.getComponent(h,p);a.setComponent(h+l,p,m)}}else s.set(u.array,o);o+=u.count*e}return n!==void 0&&(a.gpuType=n),a}function Nt(f){return f.isInstancedInterleavedBufferAttribute||f.isInterleavedBufferAttribute?ne(f):f.isInstancedBufferAttribute?new Ae().copy(f):new U().copy(f)}function Ot(f){let t,e=0,i=0;for(let c=0,u=f.length;c<u;++c){const l=f[c];if(t===void 0&&(t=l.array.constructor),t!==l.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;e+=l.array.length,i+=l.itemSize}const n=new Ce(new t(e),i);let r=0;const s=[],a=["getX","getY","getZ","getW"],o=["setX","setY","setZ","setW"];for(let c=0,u=f.length;c<u;c++){const l=f[c],h=l.itemSize,d=l.count,p=new Fe(n,h,r,l.normalized);s.push(p),r+=h;for(let m=0;m<d;m++)for(let g=0;g<h;g++)p[o[g]](m,l[a[g]](m))}return s}function ne(f){const t=f.data.array.constructor,e=f.count,i=f.itemSize,n=f.normalized,r=new t(e*i);let s;f.isInstancedInterleavedBufferAttribute?s=new Ae(r,i,n,f.meshPerAttribute):s=new U(r,i,n);for(let a=0;a<e;a++)s.setX(a,f.getX(a)),i>=2&&s.setY(a,f.getY(a)),i>=3&&s.setZ(a,f.getZ(a)),i>=4&&s.setW(a,f.getW(a));return s}function Ct(f){const t=f.attributes,e=f.morphTargets,i=new Map;for(const n in t){const r=t[n];r.isInterleavedBufferAttribute&&(i.has(r)||i.set(r,ne(r)),t[n]=i.get(r))}for(const n in e){const r=e[n];r.isInterleavedBufferAttribute&&(i.has(r)||i.set(r,ne(r)),e[n]=i.get(r))}}function Ft(f){let t=0;for(const i in f.attributes){const n=f.getAttribute(i);t+=n.count*n.itemSize*n.array.BYTES_PER_ELEMENT}const e=f.getIndex();return t+=e?e.count*e.itemSize*e.array.BYTES_PER_ELEMENT:0,t}function Pt(f,t=1e-4){t=Math.max(t,Number.EPSILON);const e={},i=f.getIndex(),n=f.getAttribute("position"),r=i?i.count:n.count;let s=0;const a=Object.keys(f.attributes),o={},c={},u=[],l=["getX","getY","getZ","getW"],h=["setX","setY","setZ","setW"];for(let R=0,A=a.length;R<A;R++){const x=a[R],E=f.attributes[x];o[x]=new E.constructor(new E.array.constructor(E.count*E.itemSize),E.itemSize,E.normalized);const S=f.morphAttributes[x];S&&(c[x]||(c[x]=[]),S.forEach((b,y)=>{const _=new b.array.constructor(b.count*b.itemSize);c[x][y]=new b.constructor(_,b.itemSize,b.normalized)}))}const d=t*.5,p=Math.log10(1/t),m=Math.pow(10,p),g=d*m;for(let R=0;R<r;R++){const A=i?i.getX(R):R;let x="";for(let E=0,S=a.length;E<S;E++){const b=a[E],y=f.getAttribute(b),_=y.itemSize;for(let L=0;L<_;L++)x+=`${~~(y[l[L]](A)*m+g)},`}if(x in e)u.push(e[x]);else{for(let E=0,S=a.length;E<S;E++){const b=a[E],y=f.getAttribute(b),_=f.morphAttributes[b],L=y.itemSize,I=o[b],F=c[b];for(let N=0;N<L;N++){const C=l[N],H=h[N];if(I[H](s,y[C](A)),_)for(let P=0,se=_.length;P<se;P++)F[P][H](s,_[P][C](A))}}e[x]=s,u.push(s),s++}}const T=f.clone();for(const R in f.attributes){const A=o[R];if(T.setAttribute(R,new A.constructor(A.array.slice(0,s*A.itemSize),A.itemSize,A.normalized)),R in c)for(let x=0;x<c[R].length;x++){const E=c[R][x];T.morphAttributes[R][x]=new E.constructor(E.array.slice(0,s*E.itemSize),E.itemSize,E.normalized)}}return T.setIndex(u),T}function ge(f,t){if(t===We)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),f;if(t===he||t===Pe){let e=f.getIndex();if(e===null){const s=[],a=f.getAttribute("position");if(a!==void 0){for(let o=0;o<a.count;o++)s.push(o);f.setIndex(s),e=f.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),f}const i=e.count-2,n=[];if(t===he)for(let s=1;s<=i;s++)n.push(e.getX(0)),n.push(e.getX(s)),n.push(e.getX(s+1));else for(let s=0;s<i;s++)s%2===0?(n.push(e.getX(s)),n.push(e.getX(s+1)),n.push(e.getX(s+2))):(n.push(e.getX(s+2)),n.push(e.getX(s+1)),n.push(e.getX(s)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=f.clone();return r.setIndex(n),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),f}function kt(f){const t=new M,e=new M,i=new M,n=new M,r=new M,s=new M,a=new M,o=new M,c=new M;function u(Y,re,ie,Xe,V,X,q,B){t.fromBufferAttribute(re,V),e.fromBufferAttribute(re,X),i.fromBufferAttribute(re,q);const Re=Y.morphTargetInfluences;if(ie&&Re){a.set(0,0,0),o.set(0,0,0),c.set(0,0,0);for(let ee=0,qe=ie.length;ee<qe;ee++){const j=Re[ee],oe=ie[ee];j!==0&&(n.fromBufferAttribute(oe,V),r.fromBufferAttribute(oe,X),s.fromBufferAttribute(oe,q),Xe?(a.addScaledVector(n,j),o.addScaledVector(r,j),c.addScaledVector(s,j)):(a.addScaledVector(n.sub(t),j),o.addScaledVector(r.sub(e),j),c.addScaledVector(s.sub(i),j)))}t.add(a),e.add(o),i.add(c)}Y.isSkinnedMesh&&(Y.applyBoneTransform(V,t),Y.applyBoneTransform(X,e),Y.applyBoneTransform(q,i)),B[V*3+0]=t.x,B[V*3+1]=t.y,B[V*3+2]=t.z,B[X*3+0]=e.x,B[X*3+1]=e.y,B[X*3+2]=e.z,B[q*3+0]=i.x,B[q*3+1]=i.y,B[q*3+2]=i.z}const l=f.geometry,h=f.material;let d,p,m;const g=l.index,T=l.attributes.position,R=l.morphAttributes.position,A=l.morphTargetsRelative,x=l.attributes.normal,E=l.morphAttributes.position,S=l.groups,b=l.drawRange;let y,_,L,I,F,N,C;const H=new Float32Array(T.count*T.itemSize),P=new Float32Array(x.count*x.itemSize);if(g!==null)if(Array.isArray(h))for(y=0,L=S.length;y<L;y++)for(F=S[y],N=Math.max(F.start,b.start),C=Math.min(F.start+F.count,b.start+b.count),_=N,I=C;_<I;_+=3)d=g.getX(_),p=g.getX(_+1),m=g.getX(_+2),u(f,T,R,A,d,p,m,H),u(f,x,E,A,d,p,m,P);else for(N=Math.max(0,b.start),C=Math.min(g.count,b.start+b.count),y=N,L=C;y<L;y+=3)d=g.getX(y),p=g.getX(y+1),m=g.getX(y+2),u(f,T,R,A,d,p,m,H),u(f,x,E,A,d,p,m,P);else if(Array.isArray(h))for(y=0,L=S.length;y<L;y++)for(F=S[y],N=Math.max(F.start,b.start),C=Math.min(F.start+F.count,b.start+b.count),_=N,I=C;_<I;_+=3)d=_,p=_+1,m=_+2,u(f,T,R,A,d,p,m,H),u(f,x,E,A,d,p,m,P);else for(N=Math.max(0,b.start),C=Math.min(T.count,b.start+b.count),y=N,L=C;y<L;y+=3)d=y,p=y+1,m=y+2,u(f,T,R,A,d,p,m,H),u(f,x,E,A,d,p,m,P);const se=new Ee(H,3),Ve=new Ee(P,3);return{positionAttribute:T,normalAttribute:x,morphedPositionAttribute:se,morphedNormalAttribute:Ve}}function Gt(f){if(f.groups.length===0)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),f;let t=f.groups;if(t=t.sort((s,a)=>s.materialIndex!==a.materialIndex?s.materialIndex-a.materialIndex:s.start-a.start),f.getIndex()===null){const s=f.getAttribute("position"),a=[];for(let o=0;o<s.count;o+=3)a.push(o,o+1,o+2);f.setIndex(a)}const e=f.getIndex(),i=[];for(let s=0;s<t.length;s++){const a=t[s],o=a.start,c=o+a.count;for(let u=o;u<c;u++)i.push(e.getX(u))}f.dispose(),f.setIndex(i);let n=0;for(let s=0;s<t.length;s++){const a=t[s];a.start=n,n+=a.count}let r=t[0];f.groups=[r];for(let s=1;s<t.length;s++){const a=t[s];r.materialIndex===a.materialIndex?r.count+=a.count:(r=a,f.groups.push(r))}return f}function Bt(f,t=Math.PI/3){const e=Math.cos(t),i=(1+1e-10)*100,n=[new M,new M,new M],r=new M,s=new M,a=new M,o=new M;function c(m){const g=~~(m.x*i),T=~~(m.y*i),R=~~(m.z*i);return`${g},${T},${R}`}const u=f.index?f.toNonIndexed():f,l=u.attributes.position,h={};for(let m=0,g=l.count/3;m<g;m++){const T=3*m,R=n[0].fromBufferAttribute(l,T+0),A=n[1].fromBufferAttribute(l,T+1),x=n[2].fromBufferAttribute(l,T+2);r.subVectors(x,A),s.subVectors(R,A);const E=new M().crossVectors(r,s).normalize();for(let S=0;S<3;S++){const b=n[S],y=c(b);y in h||(h[y]=[]),h[y].push(E)}}const d=new Float32Array(l.count*3),p=new U(d,3,!1);for(let m=0,g=l.count/3;m<g;m++){const T=3*m,R=n[0].fromBufferAttribute(l,T+0),A=n[1].fromBufferAttribute(l,T+1),x=n[2].fromBufferAttribute(l,T+2);r.subVectors(x,A),s.subVectors(R,A),a.crossVectors(r,s).normalize();for(let E=0;E<3;E++){const S=n[E],b=c(S),y=h[b];o.set(0,0,0);for(let _=0,L=y.length;_<L;_++){const I=y[_];a.dot(I)>e&&o.add(I)}o.normalize(),p.setXYZ(T+E,o.x,o.y,o.z)}}return u.setAttribute("normal",p),u}const Rn=Object.freeze(Object.defineProperty({__proto__:null,computeMikkTSpaceTangents:Lt,computeMorphedAttributes:kt,deepCloneAttribute:Nt,deinterleaveAttribute:ne,deinterleaveGeometry:Ct,estimateBytesUsed:Ft,interleaveAttributes:Ot,mergeAttributes:me,mergeGeometries:It,mergeGroups:Gt,mergeVertices:Pt,toCreasedNormals:Bt,toTrianglesDrawMode:ge},Symbol.toStringTag,{value:"Module"}));class En extends Ye{constructor(t){super(t),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(e){return new jt(e)}),this.register(function(e){return new zt(e)}),this.register(function(e){return new Jt(e)}),this.register(function(e){return new $t(e)}),this.register(function(e){return new en(e)}),this.register(function(e){return new Vt(e)}),this.register(function(e){return new Xt(e)}),this.register(function(e){return new qt(e)}),this.register(function(e){return new Wt(e)}),this.register(function(e){return new Ut(e)}),this.register(function(e){return new Yt(e)}),this.register(function(e){return new Kt(e)}),this.register(function(e){return new Qt(e)}),this.register(function(e){return new Zt(e)}),this.register(function(e){return new Ht(e)}),this.register(function(e){return new tn(e)}),this.register(function(e){return new nn(e)})}load(t,e,i,n){const r=this;let s;if(this.resourcePath!=="")s=this.resourcePath;else if(this.path!==""){const c=J.extractUrlBase(t);s=J.resolveURL(c,this.path)}else s=J.extractUrlBase(t);this.manager.itemStart(t);const a=function(c){n?n(c):console.error(c),r.manager.itemError(t),r.manager.itemEnd(t)},o=new ke(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(c){try{r.parse(c,s,function(u){e(u),r.manager.itemEnd(t)},a)}catch(u){a(u)}},i,a)}setDRACOLoader(t){return this.dracoLoader=t,this}setKTX2Loader(t){return this.ktx2Loader=t,this}setMeshoptDecoder(t){return this.meshoptDecoder=t,this}register(t){return this.pluginCallbacks.indexOf(t)===-1&&this.pluginCallbacks.push(t),this}unregister(t){return this.pluginCallbacks.indexOf(t)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(t),1),this}parse(t,e,i,n){let r;const s={},a={},o=new TextDecoder;if(typeof t=="string")r=JSON.parse(t);else if(t instanceof ArrayBuffer)if(o.decode(new Uint8Array(t,0,4))===ze){try{s[w.KHR_BINARY_GLTF]=new sn(t)}catch(l){n&&n(l);return}r=JSON.parse(s[w.KHR_BINARY_GLTF].content)}else r=JSON.parse(o.decode(t));else r=t;if(r.asset===void 0||r.asset.version[0]<2){n&&n(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const c=new Tn(r,{path:e||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});c.fileLoader.setRequestHeader(this.requestHeader);for(let u=0;u<this.pluginCallbacks.length;u++){const l=this.pluginCallbacks[u](c);l.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[l.name]=l,s[l.name]=!0}if(r.extensionsUsed)for(let u=0;u<r.extensionsUsed.length;++u){const l=r.extensionsUsed[u],h=r.extensionsRequired||[];switch(l){case w.KHR_MATERIALS_UNLIT:s[l]=new vt;break;case w.KHR_DRACO_MESH_COMPRESSION:s[l]=new rn(r,this.dracoLoader);break;case w.KHR_TEXTURE_TRANSFORM:s[l]=new on;break;case w.KHR_MESH_QUANTIZATION:s[l]=new an;break;default:h.indexOf(l)>=0&&a[l]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+l+'".')}}c.setExtensions(s),c.setPlugins(a),c.parse(i,n)}parseAsync(t,e){const i=this;return new Promise(function(n,r){i.parse(t,e,n,r)})}}function Dt(){let f={};return{get:function(t){return f[t]},add:function(t,e){f[t]=e},remove:function(t){delete f[t]},removeAll:function(){f={}}}}const w={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class Ht{constructor(t){this.parser=t,this.name=w.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const t=this.parser,e=this.parser.json.nodes||[];for(let i=0,n=e.length;i<n;i++){const r=e[i];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&t._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(t){const e=this.parser,i="light:"+t;let n=e.cache.get(i);if(n)return n;const r=e.json,o=((r.extensions&&r.extensions[this.name]||{}).lights||[])[t];let c;const u=new K(16777215);o.color!==void 0&&u.setRGB(o.color[0],o.color[1],o.color[2],D);const l=o.range!==void 0?o.range:0;switch(o.type){case"directional":c=new Je(u),c.target.position.set(0,0,-1),c.add(c.target);break;case"point":c=new Qe(u),c.distance=l;break;case"spot":c=new Ze(u),c.distance=l,o.spot=o.spot||{},o.spot.innerConeAngle=o.spot.innerConeAngle!==void 0?o.spot.innerConeAngle:0,o.spot.outerConeAngle=o.spot.outerConeAngle!==void 0?o.spot.outerConeAngle:Math.PI/4,c.angle=o.spot.outerConeAngle,c.penumbra=1-o.spot.innerConeAngle/o.spot.outerConeAngle,c.target.position.set(0,0,-1),c.add(c.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+o.type)}return c.position.set(0,0,0),k(c,o),o.intensity!==void 0&&(c.intensity=o.intensity),c.name=e.createUniqueName(o.name||"light_"+t),n=Promise.resolve(c),e.cache.add(i,n),n}getDependency(t,e){if(t==="light")return this._loadLight(e)}createNodeAttachment(t){const e=this,i=this.parser,r=i.json.nodes[t],a=(r.extensions&&r.extensions[this.name]||{}).light;return a===void 0?null:this._loadLight(a).then(function(o){return i._getNodeRef(e.cache,a,o)})}}class vt{constructor(){this.name=w.KHR_MATERIALS_UNLIT}getMaterialType(){return Q}extendParams(t,e,i){const n=[];t.color=new K(1,1,1),t.opacity=1;const r=e.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const s=r.baseColorFactor;t.color.setRGB(s[0],s[1],s[2],D),t.opacity=s[3]}r.baseColorTexture!==void 0&&n.push(i.assignTexture(t,"map",r.baseColorTexture,$))}return Promise.all(n)}}class Ut{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=n.extensions[this.name].emissiveStrength;return r!==void 0&&(e.emissiveIntensity=r),Promise.resolve()}}class jt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_CLEARCOAT}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];if(s.clearcoatFactor!==void 0&&(e.clearcoat=s.clearcoatFactor),s.clearcoatTexture!==void 0&&r.push(i.assignTexture(e,"clearcoatMap",s.clearcoatTexture)),s.clearcoatRoughnessFactor!==void 0&&(e.clearcoatRoughness=s.clearcoatRoughnessFactor),s.clearcoatRoughnessTexture!==void 0&&r.push(i.assignTexture(e,"clearcoatRoughnessMap",s.clearcoatRoughnessTexture)),s.clearcoatNormalTexture!==void 0&&(r.push(i.assignTexture(e,"clearcoatNormalMap",s.clearcoatNormalTexture)),s.clearcoatNormalTexture.scale!==void 0)){const a=s.clearcoatNormalTexture.scale;e.clearcoatNormalScale=new Ge(a,a)}return Promise.all(r)}}class zt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_DISPERSION}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=n.extensions[this.name];return e.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class Kt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_IRIDESCENCE}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return s.iridescenceFactor!==void 0&&(e.iridescence=s.iridescenceFactor),s.iridescenceTexture!==void 0&&r.push(i.assignTexture(e,"iridescenceMap",s.iridescenceTexture)),s.iridescenceIor!==void 0&&(e.iridescenceIOR=s.iridescenceIor),e.iridescenceThicknessRange===void 0&&(e.iridescenceThicknessRange=[100,400]),s.iridescenceThicknessMinimum!==void 0&&(e.iridescenceThicknessRange[0]=s.iridescenceThicknessMinimum),s.iridescenceThicknessMaximum!==void 0&&(e.iridescenceThicknessRange[1]=s.iridescenceThicknessMaximum),s.iridescenceThicknessTexture!==void 0&&r.push(i.assignTexture(e,"iridescenceThicknessMap",s.iridescenceThicknessTexture)),Promise.all(r)}}class Vt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_SHEEN}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[];e.sheenColor=new K(0,0,0),e.sheenRoughness=0,e.sheen=1;const s=n.extensions[this.name];if(s.sheenColorFactor!==void 0){const a=s.sheenColorFactor;e.sheenColor.setRGB(a[0],a[1],a[2],D)}return s.sheenRoughnessFactor!==void 0&&(e.sheenRoughness=s.sheenRoughnessFactor),s.sheenColorTexture!==void 0&&r.push(i.assignTexture(e,"sheenColorMap",s.sheenColorTexture,$)),s.sheenRoughnessTexture!==void 0&&r.push(i.assignTexture(e,"sheenRoughnessMap",s.sheenRoughnessTexture)),Promise.all(r)}}class Xt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_TRANSMISSION}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return s.transmissionFactor!==void 0&&(e.transmission=s.transmissionFactor),s.transmissionTexture!==void 0&&r.push(i.assignTexture(e,"transmissionMap",s.transmissionTexture)),Promise.all(r)}}class qt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_VOLUME}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];e.thickness=s.thicknessFactor!==void 0?s.thicknessFactor:0,s.thicknessTexture!==void 0&&r.push(i.assignTexture(e,"thicknessMap",s.thicknessTexture)),e.attenuationDistance=s.attenuationDistance||1/0;const a=s.attenuationColor||[1,1,1];return e.attenuationColor=new K().setRGB(a[0],a[1],a[2],D),Promise.all(r)}}class Wt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_IOR}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const n=this.parser.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=n.extensions[this.name];return e.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class Yt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_SPECULAR}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];e.specularIntensity=s.specularFactor!==void 0?s.specularFactor:1,s.specularTexture!==void 0&&r.push(i.assignTexture(e,"specularIntensityMap",s.specularTexture));const a=s.specularColorFactor||[1,1,1];return e.specularColor=new K().setRGB(a[0],a[1],a[2],D),s.specularColorTexture!==void 0&&r.push(i.assignTexture(e,"specularColorMap",s.specularColorTexture,$)),Promise.all(r)}}class Zt{constructor(t){this.parser=t,this.name=w.EXT_MATERIALS_BUMP}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return e.bumpScale=s.bumpFactor!==void 0?s.bumpFactor:1,s.bumpTexture!==void 0&&r.push(i.assignTexture(e,"bumpMap",s.bumpTexture)),Promise.all(r)}}class Qt{constructor(t){this.parser=t,this.name=w.KHR_MATERIALS_ANISOTROPY}getMaterialType(t){const i=this.parser.json.materials[t];return!i.extensions||!i.extensions[this.name]?null:G}extendMaterialParams(t,e){const i=this.parser,n=i.json.materials[t];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const r=[],s=n.extensions[this.name];return s.anisotropyStrength!==void 0&&(e.anisotropy=s.anisotropyStrength),s.anisotropyRotation!==void 0&&(e.anisotropyRotation=s.anisotropyRotation),s.anisotropyTexture!==void 0&&r.push(i.assignTexture(e,"anisotropyMap",s.anisotropyTexture)),Promise.all(r)}}class Jt{constructor(t){this.parser=t,this.name=w.KHR_TEXTURE_BASISU}loadTexture(t){const e=this.parser,i=e.json,n=i.textures[t];if(!n.extensions||!n.extensions[this.name])return null;const r=n.extensions[this.name],s=e.options.ktx2Loader;if(!s){if(i.extensionsRequired&&i.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return e.loadTextureImage(t,r.source,s)}}class $t{constructor(t){this.parser=t,this.name=w.EXT_TEXTURE_WEBP}loadTexture(t){const e=this.name,i=this.parser,n=i.json,r=n.textures[t];if(!r.extensions||!r.extensions[e])return null;const s=r.extensions[e],a=n.images[s.source];let o=i.textureLoader;if(a.uri){const c=i.options.manager.getHandler(a.uri);c!==null&&(o=c)}return i.loadTextureImage(t,s.source,o)}}class en{constructor(t){this.parser=t,this.name=w.EXT_TEXTURE_AVIF}loadTexture(t){const e=this.name,i=this.parser,n=i.json,r=n.textures[t];if(!r.extensions||!r.extensions[e])return null;const s=r.extensions[e],a=n.images[s.source];let o=i.textureLoader;if(a.uri){const c=i.options.manager.getHandler(a.uri);c!==null&&(o=c)}return i.loadTextureImage(t,s.source,o)}}class tn{constructor(t){this.name=w.EXT_MESHOPT_COMPRESSION,this.parser=t}loadBufferView(t){const e=this.parser.json,i=e.bufferViews[t];if(i.extensions&&i.extensions[this.name]){const n=i.extensions[this.name],r=this.parser.getDependency("buffer",n.buffer),s=this.parser.options.meshoptDecoder;if(!s||!s.supported){if(e.extensionsRequired&&e.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(a){const o=n.byteOffset||0,c=n.byteLength||0,u=n.count,l=n.byteStride,h=new Uint8Array(a,o,c);return s.decodeGltfBufferAsync?s.decodeGltfBufferAsync(u,l,h,n.mode,n.filter).then(function(d){return d.buffer}):s.ready.then(function(){const d=new ArrayBuffer(u*l);return s.decodeGltfBuffer(new Uint8Array(d),u,l,h,n.mode,n.filter),d})})}else return null}}class nn{constructor(t){this.name=w.EXT_MESH_GPU_INSTANCING,this.parser=t}createNodeMesh(t){const e=this.parser.json,i=e.nodes[t];if(!i.extensions||!i.extensions[this.name]||i.mesh===void 0)return null;const n=e.meshes[i.mesh];for(const c of n.primitives)if(c.mode!==O.TRIANGLES&&c.mode!==O.TRIANGLE_STRIP&&c.mode!==O.TRIANGLE_FAN&&c.mode!==void 0)return null;const s=i.extensions[this.name].attributes,a=[],o={};for(const c in s)a.push(this.parser.getDependency("accessor",s[c]).then(u=>(o[c]=u,o[c])));return a.length<1?null:(a.push(this.parser.createNodeMesh(t)),Promise.all(a).then(c=>{const u=c.pop(),l=u.isGroup?u.children:[u],h=c[0].count,d=[];for(const p of l){const m=new te,g=new M,T=new Be,R=new M(1,1,1),A=new $e(p.geometry,p.material,h);for(let x=0;x<h;x++)o.TRANSLATION&&g.fromBufferAttribute(o.TRANSLATION,x),o.ROTATION&&T.fromBufferAttribute(o.ROTATION,x),o.SCALE&&R.fromBufferAttribute(o.SCALE,x),A.setMatrixAt(x,m.compose(g,T,R));for(const x in o)if(x==="_COLOR_0"){const E=o[x];A.instanceColor=new Ae(E.array,E.itemSize,E.normalized)}else x!=="TRANSLATION"&&x!=="ROTATION"&&x!=="SCALE"&&p.geometry.setAttribute(x,o[x]);De.prototype.copy.call(A,p),this.parser.assignFinalMaterial(A),d.push(A)}return u.isGroup?(u.clear(),u.add(...d),u):d[0]}))}}const ze="glTF",Z=12,Me={JSON:1313821514,BIN:5130562};class sn{constructor(t){this.name=w.KHR_BINARY_GLTF,this.content=null,this.body=null;const e=new DataView(t,0,Z),i=new TextDecoder;if(this.header={magic:i.decode(new Uint8Array(t.slice(0,4))),version:e.getUint32(4,!0),length:e.getUint32(8,!0)},this.header.magic!==ze)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const n=this.header.length-Z,r=new DataView(t,Z);let s=0;for(;s<n;){const a=r.getUint32(s,!0);s+=4;const o=r.getUint32(s,!0);if(s+=4,o===Me.JSON){const c=new Uint8Array(t,Z+s,a);this.content=i.decode(c)}else if(o===Me.BIN){const c=Z+s;this.body=t.slice(c,c+a)}s+=a}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class rn{constructor(t,e){if(!e)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=w.KHR_DRACO_MESH_COMPRESSION,this.json=t,this.dracoLoader=e,this.dracoLoader.preload()}decodePrimitive(t,e){const i=this.json,n=this.dracoLoader,r=t.extensions[this.name].bufferView,s=t.extensions[this.name].attributes,a={},o={},c={};for(const u in s){const l=Te[u]||u.toLowerCase();a[l]=s[u]}for(const u in t.attributes){const l=Te[u]||u.toLowerCase();if(s[u]!==void 0){const h=i.accessors[t.attributes[u]],d=W[h.componentType];c[l]=d.name,o[l]=h.normalized===!0}}return e.getDependency("bufferView",r).then(function(u){return new Promise(function(l,h){n.decodeDracoFile(u,function(d){for(const p in d.attributes){const m=d.attributes[p],g=o[p];g!==void 0&&(m.normalized=g)}l(d)},a,c,D,h)})})}}class on{constructor(){this.name=w.KHR_TEXTURE_TRANSFORM}extendTexture(t,e){return(e.texCoord===void 0||e.texCoord===t.channel)&&e.offset===void 0&&e.rotation===void 0&&e.scale===void 0||(t=t.clone(),e.texCoord!==void 0&&(t.channel=e.texCoord),e.offset!==void 0&&t.offset.fromArray(e.offset),e.rotation!==void 0&&(t.rotation=e.rotation),e.scale!==void 0&&t.repeat.fromArray(e.scale),t.needsUpdate=!0),t}}class an{constructor(){this.name=w.KHR_MESH_QUANTIZATION}}class Ke extends _t{constructor(t,e,i,n){super(t,e,i,n)}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n*3+n;for(let s=0;s!==n;s++)e[s]=i[r+s];return e}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=a*2,c=a*3,u=n-e,l=(i-e)/u,h=l*l,d=h*l,p=t*c,m=p-c,g=-2*d+3*h,T=d-h,R=1-g,A=T-h+l;for(let x=0;x!==a;x++){const E=s[m+x+a],S=s[m+x+o]*u,b=s[p+x+a],y=s[p+x]*u;r[x]=R*E+A*S+g*b+T*y}return r}}const cn=new Be;class un extends Ke{interpolate_(t,e,i,n){const r=super.interpolate_(t,e,i,n);return cn.fromArray(r).normalize().toArray(r),r}}const O={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},W={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},Le={9728:ve,9729:de,9984:rt,9985:st,9986:nt,9987:He},Ie={33071:ot,33648:it,10497:pe},ue={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Te={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},v={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},ln={CUBICSPLINE:void 0,LINEAR:je,STEP:yt},le={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function fn(f){return f.DefaultMaterial===void 0&&(f.DefaultMaterial=new Ue({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:wt})),f.DefaultMaterial}function z(f,t,e){for(const i in e.extensions)f[i]===void 0&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[i]=e.extensions[i])}function k(f,t){t.extras!==void 0&&(typeof t.extras=="object"?Object.assign(f.userData,t.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+t.extras))}function hn(f,t,e){let i=!1,n=!1,r=!1;for(let c=0,u=t.length;c<u;c++){const l=t[c];if(l.POSITION!==void 0&&(i=!0),l.NORMAL!==void 0&&(n=!0),l.COLOR_0!==void 0&&(r=!0),i&&n&&r)break}if(!i&&!n&&!r)return Promise.resolve(f);const s=[],a=[],o=[];for(let c=0,u=t.length;c<u;c++){const l=t[c];if(i){const h=l.POSITION!==void 0?e.getDependency("accessor",l.POSITION):f.attributes.position;s.push(h)}if(n){const h=l.NORMAL!==void 0?e.getDependency("accessor",l.NORMAL):f.attributes.normal;a.push(h)}if(r){const h=l.COLOR_0!==void 0?e.getDependency("accessor",l.COLOR_0):f.attributes.color;o.push(h)}}return Promise.all([Promise.all(s),Promise.all(a),Promise.all(o)]).then(function(c){const u=c[0],l=c[1],h=c[2];return i&&(f.morphAttributes.position=u),n&&(f.morphAttributes.normal=l),r&&(f.morphAttributes.color=h),f.morphTargetsRelative=!0,f})}function dn(f,t){if(f.updateMorphTargets(),t.weights!==void 0)for(let e=0,i=t.weights.length;e<i;e++)f.morphTargetInfluences[e]=t.weights[e];if(t.extras&&Array.isArray(t.extras.targetNames)){const e=t.extras.targetNames;if(f.morphTargetInfluences.length===e.length){f.morphTargetDictionary={};for(let i=0,n=e.length;i<n;i++)f.morphTargetDictionary[e[i]]=i}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function pn(f){let t;const e=f.extensions&&f.extensions[w.KHR_DRACO_MESH_COMPRESSION];if(e?t="draco:"+e.bufferView+":"+e.indices+":"+fe(e.attributes):t=f.indices+":"+fe(f.attributes)+":"+f.mode,f.targets!==void 0)for(let i=0,n=f.targets.length;i<n;i++)t+=":"+fe(f.targets[i]);return t}function fe(f){let t="";const e=Object.keys(f).sort();for(let i=0,n=e.length;i<n;i++)t+=e[i]+":"+f[e[i]]+";";return t}function xe(f){switch(f){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function mn(f){return f.search(/\.jpe?g($|\?)/i)>0||f.search(/^data\:image\/jpeg/)===0?"image/jpeg":f.search(/\.webp($|\?)/i)>0||f.search(/^data\:image\/webp/)===0?"image/webp":f.search(/\.ktx2($|\?)/i)>0||f.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const gn=new te;class Tn{constructor(t={},e={}){this.json=t,this.extensions={},this.plugins={},this.options=e,this.cache=new Dt,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let i=!1,n=-1,r=!1,s=-1;if(typeof navigator<"u"){const a=navigator.userAgent;i=/^((?!chrome|android).)*safari/i.test(a)===!0;const o=a.match(/Version\/(\d+)/);n=i&&o?parseInt(o[1],10):-1,r=a.indexOf("Firefox")>-1,s=r?a.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||i&&n<17||r&&s<98?this.textureLoader=new et(this.options.manager):this.textureLoader=new tt(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new ke(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(t){this.extensions=t}setPlugins(t){this.plugins=t}parse(t,e){const i=this,n=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(s){return s._markDefs&&s._markDefs()}),Promise.all(this._invokeAll(function(s){return s.beforeRoot&&s.beforeRoot()})).then(function(){return Promise.all([i.getDependencies("scene"),i.getDependencies("animation"),i.getDependencies("camera")])}).then(function(s){const a={scene:s[0][n.scene||0],scenes:s[0],animations:s[1],cameras:s[2],asset:n.asset,parser:i,userData:{}};return z(r,a,n),k(a,n),Promise.all(i._invokeAll(function(o){return o.afterRoot&&o.afterRoot(a)})).then(function(){for(const o of a.scenes)o.updateMatrixWorld();t(a)})}).catch(e)}_markDefs(){const t=this.json.nodes||[],e=this.json.skins||[],i=this.json.meshes||[];for(let n=0,r=e.length;n<r;n++){const s=e[n].joints;for(let a=0,o=s.length;a<o;a++)t[s[a]].isBone=!0}for(let n=0,r=t.length;n<r;n++){const s=t[n];s.mesh!==void 0&&(this._addNodeRef(this.meshCache,s.mesh),s.skin!==void 0&&(i[s.mesh].isSkinnedMesh=!0)),s.camera!==void 0&&this._addNodeRef(this.cameraCache,s.camera)}}_addNodeRef(t,e){e!==void 0&&(t.refs[e]===void 0&&(t.refs[e]=t.uses[e]=0),t.refs[e]++)}_getNodeRef(t,e,i){if(t.refs[e]<=1)return i;const n=i.clone(),r=(s,a)=>{const o=this.associations.get(s);o!=null&&this.associations.set(a,o);for(const[c,u]of s.children.entries())r(u,a.children[c])};return r(i,n),n.name+="_instance_"+t.uses[e]++,n}_invokeOne(t){const e=Object.values(this.plugins);e.push(this);for(let i=0;i<e.length;i++){const n=t(e[i]);if(n)return n}return null}_invokeAll(t){const e=Object.values(this.plugins);e.unshift(this);const i=[];for(let n=0;n<e.length;n++){const r=t(e[n]);r&&i.push(r)}return i}getDependency(t,e){const i=t+":"+e;let n=this.cache.get(i);if(!n){switch(t){case"scene":n=this.loadScene(e);break;case"node":n=this._invokeOne(function(r){return r.loadNode&&r.loadNode(e)});break;case"mesh":n=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(e)});break;case"accessor":n=this.loadAccessor(e);break;case"bufferView":n=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(e)});break;case"buffer":n=this.loadBuffer(e);break;case"material":n=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(e)});break;case"texture":n=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(e)});break;case"skin":n=this.loadSkin(e);break;case"animation":n=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(e)});break;case"camera":n=this.loadCamera(e);break;default:if(n=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(t,e)}),!n)throw new Error("Unknown type: "+t);break}this.cache.add(i,n)}return n}getDependencies(t){let e=this.cache.get(t);if(!e){const i=this,n=this.json[t+(t==="mesh"?"es":"s")]||[];e=Promise.all(n.map(function(r,s){return i.getDependency(t,s)})),this.cache.add(t,e)}return e}loadBuffer(t){const e=this.json.buffers[t],i=this.fileLoader;if(e.type&&e.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+e.type+" buffer type is not supported.");if(e.uri===void 0&&t===0)return Promise.resolve(this.extensions[w.KHR_BINARY_GLTF].body);const n=this.options;return new Promise(function(r,s){i.load(J.resolveURL(e.uri,n.path),r,void 0,function(){s(new Error('THREE.GLTFLoader: Failed to load buffer "'+e.uri+'".'))})})}loadBufferView(t){const e=this.json.bufferViews[t];return this.getDependency("buffer",e.buffer).then(function(i){const n=e.byteLength||0,r=e.byteOffset||0;return i.slice(r,r+n)})}loadAccessor(t){const e=this,i=this.json,n=this.json.accessors[t];if(n.bufferView===void 0&&n.sparse===void 0){const s=ue[n.type],a=W[n.componentType],o=n.normalized===!0,c=new a(n.count*s);return Promise.resolve(new U(c,s,o))}const r=[];return n.bufferView!==void 0?r.push(this.getDependency("bufferView",n.bufferView)):r.push(null),n.sparse!==void 0&&(r.push(this.getDependency("bufferView",n.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",n.sparse.values.bufferView))),Promise.all(r).then(function(s){const a=s[0],o=ue[n.type],c=W[n.componentType],u=c.BYTES_PER_ELEMENT,l=u*o,h=n.byteOffset||0,d=n.bufferView!==void 0?i.bufferViews[n.bufferView].byteStride:void 0,p=n.normalized===!0;let m,g;if(d&&d!==l){const T=Math.floor(h/d),R="InterleavedBuffer:"+n.bufferView+":"+n.componentType+":"+T+":"+n.count;let A=e.cache.get(R);A||(m=new c(a,T*d,n.count*d/u),A=new Ce(m,d/u),e.cache.add(R,A)),g=new Fe(A,o,h%d/u,p)}else a===null?m=new c(n.count*o):m=new c(a,h,n.count*o),g=new U(m,o,p);if(n.sparse!==void 0){const T=ue.SCALAR,R=W[n.sparse.indices.componentType],A=n.sparse.indices.byteOffset||0,x=n.sparse.values.byteOffset||0,E=new R(s[1],A,n.sparse.count*T),S=new c(s[2],x,n.sparse.count*o);a!==null&&(g=new U(g.array.slice(),g.itemSize,g.normalized)),g.normalized=!1;for(let b=0,y=E.length;b<y;b++){const _=E[b];if(g.setX(_,S[b*o]),o>=2&&g.setY(_,S[b*o+1]),o>=3&&g.setZ(_,S[b*o+2]),o>=4&&g.setW(_,S[b*o+3]),o>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}g.normalized=p}return g})}loadTexture(t){const e=this.json,i=this.options,r=e.textures[t].source,s=e.images[r];let a=this.textureLoader;if(s.uri){const o=i.manager.getHandler(s.uri);o!==null&&(a=o)}return this.loadTextureImage(t,r,a)}loadTextureImage(t,e,i){const n=this,r=this.json,s=r.textures[t],a=r.images[e],o=(a.uri||a.bufferView)+":"+s.sampler;if(this.textureCache[o])return this.textureCache[o];const c=this.loadImageSource(e,i).then(function(u){u.flipY=!1,u.name=s.name||a.name||"",u.name===""&&typeof a.uri=="string"&&a.uri.startsWith("data:image/")===!1&&(u.name=a.uri);const h=(r.samplers||{})[s.sampler]||{};return u.magFilter=Le[h.magFilter]||de,u.minFilter=Le[h.minFilter]||He,u.wrapS=Ie[h.wrapS]||pe,u.wrapT=Ie[h.wrapT]||pe,u.generateMipmaps=!u.isCompressedTexture&&u.minFilter!==ve&&u.minFilter!==de,n.associations.set(u,{textures:t}),u}).catch(function(){return null});return this.textureCache[o]=c,c}loadImageSource(t,e){const i=this,n=this.json,r=this.options;if(this.sourceCache[t]!==void 0)return this.sourceCache[t].then(l=>l.clone());const s=n.images[t],a=self.URL||self.webkitURL;let o=s.uri||"",c=!1;if(s.bufferView!==void 0)o=i.getDependency("bufferView",s.bufferView).then(function(l){c=!0;const h=new Blob([l],{type:s.mimeType});return o=a.createObjectURL(h),o});else if(s.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+t+" is missing URI and bufferView");const u=Promise.resolve(o).then(function(l){return new Promise(function(h,d){let p=h;e.isImageBitmapLoader===!0&&(p=function(m){const g=new be(m);g.needsUpdate=!0,h(g)}),e.load(J.resolveURL(l,r.path),p,void 0,d)})}).then(function(l){return c===!0&&a.revokeObjectURL(o),k(l,s),l.userData.mimeType=s.mimeType||mn(s.uri),l}).catch(function(l){throw console.error("THREE.GLTFLoader: Couldn't load texture",o),l});return this.sourceCache[t]=u,u}assignTexture(t,e,i,n){const r=this;return this.getDependency("texture",i.index).then(function(s){if(!s)return null;if(i.texCoord!==void 0&&i.texCoord>0&&(s=s.clone(),s.channel=i.texCoord),r.extensions[w.KHR_TEXTURE_TRANSFORM]){const a=i.extensions!==void 0?i.extensions[w.KHR_TEXTURE_TRANSFORM]:void 0;if(a){const o=r.associations.get(s);s=r.extensions[w.KHR_TEXTURE_TRANSFORM].extendTexture(s,a),r.associations.set(s,o)}}return n!==void 0&&(s.colorSpace=n),t[e]=s,s})}assignFinalMaterial(t){const e=t.geometry;let i=t.material;const n=e.attributes.tangent===void 0,r=e.attributes.color!==void 0,s=e.attributes.normal===void 0;if(t.isPoints){const a="PointsMaterial:"+i.uuid;let o=this.cache.get(a);o||(o=new at,ae.prototype.copy.call(o,i),o.color.copy(i.color),o.map=i.map,o.sizeAttenuation=!1,this.cache.add(a,o)),i=o}else if(t.isLine){const a="LineBasicMaterial:"+i.uuid;let o=this.cache.get(a);o||(o=new ct,ae.prototype.copy.call(o,i),o.color.copy(i.color),o.map=i.map,this.cache.add(a,o)),i=o}if(n||r||s){let a="ClonedMaterial:"+i.uuid+":";n&&(a+="derivative-tangents:"),r&&(a+="vertex-colors:"),s&&(a+="flat-shading:");let o=this.cache.get(a);o||(o=i.clone(),r&&(o.vertexColors=!0),s&&(o.flatShading=!0),n&&(o.normalScale&&(o.normalScale.y*=-1),o.clearcoatNormalScale&&(o.clearcoatNormalScale.y*=-1)),this.cache.add(a,o),this.associations.set(o,this.associations.get(i))),i=o}t.material=i}getMaterialType(){return Ue}loadMaterial(t){const e=this,i=this.json,n=this.extensions,r=i.materials[t];let s;const a={},o=r.extensions||{},c=[];if(o[w.KHR_MATERIALS_UNLIT]){const l=n[w.KHR_MATERIALS_UNLIT];s=l.getMaterialType(),c.push(l.extendParams(a,r,e))}else{const l=r.pbrMetallicRoughness||{};if(a.color=new K(1,1,1),a.opacity=1,Array.isArray(l.baseColorFactor)){const h=l.baseColorFactor;a.color.setRGB(h[0],h[1],h[2],D),a.opacity=h[3]}l.baseColorTexture!==void 0&&c.push(e.assignTexture(a,"map",l.baseColorTexture,$)),a.metalness=l.metallicFactor!==void 0?l.metallicFactor:1,a.roughness=l.roughnessFactor!==void 0?l.roughnessFactor:1,l.metallicRoughnessTexture!==void 0&&(c.push(e.assignTexture(a,"metalnessMap",l.metallicRoughnessTexture)),c.push(e.assignTexture(a,"roughnessMap",l.metallicRoughnessTexture))),s=this._invokeOne(function(h){return h.getMaterialType&&h.getMaterialType(t)}),c.push(Promise.all(this._invokeAll(function(h){return h.extendMaterialParams&&h.extendMaterialParams(t,a)})))}r.doubleSided===!0&&(a.side=ut);const u=r.alphaMode||le.OPAQUE;if(u===le.BLEND?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,u===le.MASK&&(a.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&s!==Q&&(c.push(e.assignTexture(a,"normalMap",r.normalTexture)),a.normalScale=new Ge(1,1),r.normalTexture.scale!==void 0)){const l=r.normalTexture.scale;a.normalScale.set(l,l)}if(r.occlusionTexture!==void 0&&s!==Q&&(c.push(e.assignTexture(a,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(a.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&s!==Q){const l=r.emissiveFactor;a.emissive=new K().setRGB(l[0],l[1],l[2],D)}return r.emissiveTexture!==void 0&&s!==Q&&c.push(e.assignTexture(a,"emissiveMap",r.emissiveTexture,$)),Promise.all(c).then(function(){const l=new s(a);return r.name&&(l.name=r.name),k(l,r),e.associations.set(l,{materials:t}),r.extensions&&z(n,l,r),l})}createUniqueName(t){const e=lt.sanitizeNodeName(t||"");return e in this.nodeNamesUsed?e+"_"+ ++this.nodeNamesUsed[e]:(this.nodeNamesUsed[e]=0,e)}loadGeometries(t){const e=this,i=this.extensions,n=this.primitiveCache;function r(a){return i[w.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,e).then(function(o){return Ne(o,a,e)})}const s=[];for(let a=0,o=t.length;a<o;a++){const c=t[a],u=pn(c),l=n[u];if(l)s.push(l.promise);else{let h;c.extensions&&c.extensions[w.KHR_DRACO_MESH_COMPRESSION]?h=r(c):h=Ne(new Oe,c,e),n[u]={primitive:c,promise:h},s.push(h)}}return Promise.all(s)}loadMesh(t){const e=this,i=this.json,n=this.extensions,r=i.meshes[t],s=r.primitives,a=[];for(let o=0,c=s.length;o<c;o++){const u=s[o].material===void 0?fn(this.cache):this.getDependency("material",s[o].material);a.push(u)}return a.push(e.loadGeometries(s)),Promise.all(a).then(function(o){const c=o.slice(0,o.length-1),u=o[o.length-1],l=[];for(let d=0,p=u.length;d<p;d++){const m=u[d],g=s[d];let T;const R=c[d];if(g.mode===O.TRIANGLES||g.mode===O.TRIANGLE_STRIP||g.mode===O.TRIANGLE_FAN||g.mode===void 0)T=r.isSkinnedMesh===!0?new ft(m,R):new ht(m,R),T.isSkinnedMesh===!0&&T.normalizeSkinWeights(),g.mode===O.TRIANGLE_STRIP?T.geometry=ge(T.geometry,Pe):g.mode===O.TRIANGLE_FAN&&(T.geometry=ge(T.geometry,he));else if(g.mode===O.LINES)T=new dt(m,R);else if(g.mode===O.LINE_STRIP)T=new pt(m,R);else if(g.mode===O.LINE_LOOP)T=new mt(m,R);else if(g.mode===O.POINTS)T=new gt(m,R);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+g.mode);Object.keys(T.geometry.morphAttributes).length>0&&dn(T,r),T.name=e.createUniqueName(r.name||"mesh_"+t),k(T,r),g.extensions&&z(n,T,g),e.assignFinalMaterial(T),l.push(T)}for(let d=0,p=l.length;d<p;d++)e.associations.set(l[d],{meshes:t,primitives:d});if(l.length===1)return r.extensions&&z(n,l[0],r),l[0];const h=new ce;r.extensions&&z(n,h,r),e.associations.set(h,{meshes:t});for(let d=0,p=l.length;d<p;d++)h.add(l[d]);return h})}loadCamera(t){let e;const i=this.json.cameras[t],n=i[i.type];if(!n){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return i.type==="perspective"?e=new Tt(xt.radToDeg(n.yfov),n.aspectRatio||1,n.znear||1,n.zfar||2e6):i.type==="orthographic"&&(e=new At(-n.xmag,n.xmag,n.ymag,-n.ymag,n.znear,n.zfar)),i.name&&(e.name=this.createUniqueName(i.name)),k(e,i),Promise.resolve(e)}loadSkin(t){const e=this.json.skins[t],i=[];for(let n=0,r=e.joints.length;n<r;n++)i.push(this._loadNodeShallow(e.joints[n]));return e.inverseBindMatrices!==void 0?i.push(this.getDependency("accessor",e.inverseBindMatrices)):i.push(null),Promise.all(i).then(function(n){const r=n.pop(),s=n,a=[],o=[];for(let c=0,u=s.length;c<u;c++){const l=s[c];if(l){a.push(l);const h=new te;r!==null&&h.fromArray(r.array,c*16),o.push(h)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',e.joints[c])}return new Rt(a,o)})}loadAnimation(t){const e=this.json,i=this,n=e.animations[t],r=n.name?n.name:"animation_"+t,s=[],a=[],o=[],c=[],u=[];for(let l=0,h=n.channels.length;l<h;l++){const d=n.channels[l],p=n.samplers[d.sampler],m=d.target,g=m.node,T=n.parameters!==void 0?n.parameters[p.input]:p.input,R=n.parameters!==void 0?n.parameters[p.output]:p.output;m.node!==void 0&&(s.push(this.getDependency("node",g)),a.push(this.getDependency("accessor",T)),o.push(this.getDependency("accessor",R)),c.push(p),u.push(m))}return Promise.all([Promise.all(s),Promise.all(a),Promise.all(o),Promise.all(c),Promise.all(u)]).then(function(l){const h=l[0],d=l[1],p=l[2],m=l[3],g=l[4],T=[];for(let A=0,x=h.length;A<x;A++){const E=h[A],S=d[A],b=p[A],y=m[A],_=g[A];if(E===void 0)continue;E.updateMatrix&&E.updateMatrix();const L=i._createAnimationTracks(E,S,b,y,_);if(L)for(let I=0;I<L.length;I++)T.push(L[I])}const R=new Et(r,void 0,T);return k(R,n),R})}createNodeMesh(t){const e=this.json,i=this,n=e.nodes[t];return n.mesh===void 0?null:i.getDependency("mesh",n.mesh).then(function(r){const s=i._getNodeRef(i.meshCache,n.mesh,r);return n.weights!==void 0&&s.traverse(function(a){if(a.isMesh)for(let o=0,c=n.weights.length;o<c;o++)a.morphTargetInfluences[o]=n.weights[o]}),s})}loadNode(t){const e=this.json,i=this,n=e.nodes[t],r=i._loadNodeShallow(t),s=[],a=n.children||[];for(let c=0,u=a.length;c<u;c++)s.push(i.getDependency("node",a[c]));const o=n.skin===void 0?Promise.resolve(null):i.getDependency("skin",n.skin);return Promise.all([r,Promise.all(s),o]).then(function(c){const u=c[0],l=c[1],h=c[2];h!==null&&u.traverse(function(d){d.isSkinnedMesh&&d.bind(h,gn)});for(let d=0,p=l.length;d<p;d++)u.add(l[d]);return u})}_loadNodeShallow(t){const e=this.json,i=this.extensions,n=this;if(this.nodeCache[t]!==void 0)return this.nodeCache[t];const r=e.nodes[t],s=r.name?n.createUniqueName(r.name):"",a=[],o=n._invokeOne(function(c){return c.createNodeMesh&&c.createNodeMesh(t)});return o&&a.push(o),r.camera!==void 0&&a.push(n.getDependency("camera",r.camera).then(function(c){return n._getNodeRef(n.cameraCache,r.camera,c)})),n._invokeAll(function(c){return c.createNodeAttachment&&c.createNodeAttachment(t)}).forEach(function(c){a.push(c)}),this.nodeCache[t]=Promise.all(a).then(function(c){let u;if(r.isBone===!0?u=new bt:c.length>1?u=new ce:c.length===1?u=c[0]:u=new De,u!==c[0])for(let l=0,h=c.length;l<h;l++)u.add(c[l]);if(r.name&&(u.userData.name=r.name,u.name=s),k(u,r),r.extensions&&z(i,u,r),r.matrix!==void 0){const l=new te;l.fromArray(r.matrix),u.applyMatrix4(l)}else r.translation!==void 0&&u.position.fromArray(r.translation),r.rotation!==void 0&&u.quaternion.fromArray(r.rotation),r.scale!==void 0&&u.scale.fromArray(r.scale);if(!n.associations.has(u))n.associations.set(u,{});else if(r.mesh!==void 0&&n.meshCache.refs[r.mesh]>1){const l=n.associations.get(u);n.associations.set(u,{...l})}return n.associations.get(u).nodes=t,u}),this.nodeCache[t]}loadScene(t){const e=this.extensions,i=this.json.scenes[t],n=this,r=new ce;i.name&&(r.name=n.createUniqueName(i.name)),k(r,i),i.extensions&&z(e,r,i);const s=i.nodes||[],a=[];for(let o=0,c=s.length;o<c;o++)a.push(n.getDependency("node",s[o]));return Promise.all(a).then(function(o){for(let u=0,l=o.length;u<l;u++)r.add(o[u]);const c=u=>{const l=new Map;for(const[h,d]of n.associations)(h instanceof ae||h instanceof be)&&l.set(h,d);return u.traverse(h=>{const d=n.associations.get(h);d!=null&&l.set(h,d)}),l};return n.associations=c(r),r})}_createAnimationTracks(t,e,i,n,r){const s=[],a=t.name?t.name:t.uuid,o=[];v[r.path]===v.weights?t.traverse(function(h){h.morphTargetInfluences&&o.push(h.name?h.name:h.uuid)}):o.push(a);let c;switch(v[r.path]){case v.weights:c=we;break;case v.rotation:c=_e;break;case v.translation:case v.scale:c=ye;break;default:switch(i.itemSize){case 1:c=we;break;case 2:case 3:default:c=ye;break}break}const u=n.interpolation!==void 0?ln[n.interpolation]:je,l=this._getArrayFromAccessor(i);for(let h=0,d=o.length;h<d;h++){const p=new c(o[h]+"."+v[r.path],e.array,l,u);n.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),s.push(p)}return s}_getArrayFromAccessor(t){let e=t.array;if(t.normalized){const i=xe(e.constructor),n=new Float32Array(e.length);for(let r=0,s=e.length;r<s;r++)n[r]=e[r]*i;e=n}return e}_createCubicSplineTrackInterpolant(t){t.createInterpolant=function(i){const n=this instanceof _e?un:Ke;return new n(this.times,this.values,this.getValueSize()/3,i)},t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function xn(f,t,e){const i=t.attributes,n=new St;if(i.POSITION!==void 0){const a=e.json.accessors[i.POSITION],o=a.min,c=a.max;if(o!==void 0&&c!==void 0){if(n.set(new M(o[0],o[1],o[2]),new M(c[0],c[1],c[2])),a.normalized){const u=xe(W[a.componentType]);n.min.multiplyScalar(u),n.max.multiplyScalar(u)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=t.targets;if(r!==void 0){const a=new M,o=new M;for(let c=0,u=r.length;c<u;c++){const l=r[c];if(l.POSITION!==void 0){const h=e.json.accessors[l.POSITION],d=h.min,p=h.max;if(d!==void 0&&p!==void 0){if(o.setX(Math.max(Math.abs(d[0]),Math.abs(p[0]))),o.setY(Math.max(Math.abs(d[1]),Math.abs(p[1]))),o.setZ(Math.max(Math.abs(d[2]),Math.abs(p[2]))),h.normalized){const m=xe(W[h.componentType]);o.multiplyScalar(m)}a.max(o)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}n.expandByVector(a)}f.boundingBox=n;const s=new Mt;n.getCenter(s.center),s.radius=n.min.distanceTo(n.max)/2,f.boundingSphere=s}function Ne(f,t,e){const i=t.attributes,n=[];function r(s,a){return e.getDependency("accessor",s).then(function(o){f.setAttribute(a,o)})}for(const s in i){const a=Te[s]||s.toLowerCase();a in f.attributes||n.push(r(i[s],a))}if(t.indices!==void 0&&!f.index){const s=e.getDependency("accessor",t.indices).then(function(a){f.setIndex(a)});n.push(s)}return Se.workingColorSpace!==D&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${Se.workingColorSpace}" not supported.`),k(f,t),xn(f,t,e),Promise.all(n).then(function(){return t.targets!==void 0?hn(f,t.targets,e):f})}export{Rn as B,En as G,It as m};
//# sourceMappingURL=game-By5lhz7D.js.map
