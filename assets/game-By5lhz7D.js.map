{"version":3,"file":"game-By5lhz7D.js","sources":["../../node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","../../node_modules/three/examples/jsm/loaders/GLTFLoader.js"],"sourcesContent":["import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\n/**\n * @module BufferGeometryUtils\n * @three_import import * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n */\n\n/**\n * Computes vertex tangents using the MikkTSpace algorithm. MikkTSpace generates the same tangents consistently,\n * and is used in most modelling tools and normal map bakers. Use MikkTSpace for materials with normal maps,\n * because inconsistent tangents may lead to subtle visual issues in the normal map, particularly around mirrored\n * UV seams.\n *\n * In comparison to this method, {@link BufferGeometry#computeTangents} (a custom algorithm) generates tangents that\n * probably will not match the tangents in other software. The custom algorithm is sufficient for general use with a\n * custom material, and may be faster than MikkTSpace.\n *\n * Returns the original BufferGeometry. Indexed geometries will be de-indexed. Requires position, normal, and uv attributes.\n *\n * @param {BufferGeometry} geometry - The geometry to compute tangents for.\n * @param {Object} MikkTSpace - Instance of `examples/jsm/libs/mikktspace.module.js`, or `mikktspace` npm package.\n * Await `MikkTSpace.ready` before use.\n * @param {boolean} [negateSign=true] - Whether to negate the sign component (.w) of each tangent.\n * Required for normal map conventions in some formats, including glTF.\n * @return {BufferGeometry} The updated geometry.\n */\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Merges a set of geometries into a single instance. All geometries must have compatible attributes.\n *\n * @param {Array<BufferGeometry>} geometries - The geometries to merge.\n * @param {boolean} [useGroups=false] - Whether to use groups or not.\n * @return {?BufferGeometry} The merged geometry. Returns `null` if the merge does not succeed.\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * Merges a set of attributes into a single instance. All attributes must have compatible properties and types.\n * Instances of {@link InterleavedBufferAttribute} are not supported.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to merge.\n * @return {?BufferAttribute} The merged attribute. Returns `null` if the merge does not succeed.\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.count * itemSize;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst tupleOffset = offset / itemSize;\n\t\t\tfor ( let j = 0, l = attribute.count; j < l; j ++ ) {\n\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tconst value = attribute.getComponent( j, c );\n\t\t\t\t\tresult.setComponent( j + tupleOffset, c, value );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tarray.set( attribute.array, offset );\n\n\t\t}\n\n\t\toffset += attribute.count * itemSize;\n\n\t}\n\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Performs a deep clone of the given buffer attribute.\n *\n * @param {BufferAttribute} attribute - The attribute to clone.\n * @return {BufferAttribute} The cloned attribute.\n */\nfunction deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * Interleaves a set of attributes and returns a new array of corresponding attributes that share a\n * single {@link InterleavedBuffer} instance. All attributes must have compatible types.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to interleave.\n * @return {?Array<InterleavedBufferAttribute>} An array of interleaved attributes. If interleave does not succeed, the method returns `null`.\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n/**\n * Returns a new, non-interleaved version of the given attribute.\n *\n * @param {InterleavedBufferAttribute} attribute - The interleaved attribute.\n * @return {BufferAttribute} The non-interleaved attribute.\n */\nfunction deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n/**\n * Deinterleaves all attributes on the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to deinterleave.\n */\nfunction deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Returns the amount of bytes used by all attributes to represent the geometry.\n *\n * @param {BufferGeometry} geometry - The geometry.\n * @return {number} The estimate bytes used.\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * Returns a new geometry with vertices for which all similar vertex attributes (within tolerance) are merged.\n *\n * @param {BufferGeometry} geometry - The geometry to merge vertices for.\n * @param {number} [tolerance=1e-4] - The tolerance value.\n * @return {BufferGeometry} - The new geometry with merged vertices.\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new attr.constructor(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\tif ( morphAttributes ) {\n\n\t\t\tif ( ! tmpMorphAttributes[ name ] ) tmpMorphAttributes[ name ] = [];\n\t\t\tmorphAttributes.forEach( ( morphAttr, i ) => {\n\n\t\t\t\tconst array = new morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize );\n\t\t\t\ttmpMorphAttributes[ name ][ i ] = new morphAttr.constructor( array, morphAttr.itemSize, morphAttr.normalized );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst halfTolerance = tolerance * 0.5;\n\tconst exponent = Math.log10( 1 / tolerance );\n\tconst hashMultiplier = Math.pow( 10, exponent );\n\tconst hashAdditive = halfTolerance * hashMultiplier;\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * hashMultiplier + hashAdditive ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newArray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewArray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttributes ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttributes.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttributes[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new tmpAttribute.constructor(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new tmpMorphAttribute.constructor(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * Returns a new indexed geometry based on `TrianglesDrawMode` draw mode.\n * This mode corresponds to the `gl.TRIANGLES` primitive in WebGL.\n *\n * @param {BufferGeometry} geometry - The geometry to convert.\n * @param {number} drawMode - The current draw mode.\n * @return {BufferGeometry} The new geometry using `TrianglesDrawMode`.\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n *\n * Helpful for Raytracing or Decals (i.e. a `DecalGeometry` applied to a morphed Object with a `BufferGeometry`\n * will use the original `BufferGeometry`, not the morphed/skinned one, generating an incorrect result.\n * Using this function to create a shadow `Object3`D the `DecalGeometry` can be correctly generated).\n *\n * @param {Mesh|Line|Points} object - The 3D object to compute morph attributes for.\n * @return {Object} An object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\n/**\n * Merges the {@link BufferGeometry#groups} for the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @param {number} [creaseAngle=Math.PI/3] - The crease angle in radians.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeAttributes,\n\tdeepCloneAttribute,\n\tdeinterleaveAttribute,\n\tdeinterleaveGeometry,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tColorManagement,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInstancedMesh,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearSRGBColorSpace,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tInstancedBufferAttribute\n} from 'three';\nimport { toTrianglesDrawMode } from '../utils/BufferGeometryUtils.js';\n\n/**\n * A loader for the glTF 2.0 format.\n *\n * [glTF]{@link https://www.khronos.org/gltf/} (GL Transmission Format) is an [open format specification]{@link https://github.com/KhronosGroup/glTF/tree/main/specification/2.0}\n * for efficient delivery and loading of 3D content. Assets may be provided either in JSON (.gltf) or binary (.glb)\n * format. External files store textures (.jpg, .png) and additional binary data (.bin). A glTF asset may deliver\n * one or more scenes, including meshes, materials, textures, skins, skeletons, morph targets, animations, lights,\n * and/or cameras.\n *\n * `GLTFLoader` uses {@link ImageBitmapLoader} whenever possible. Be advised that image bitmaps are not\n * automatically GC-collected when they are no longer referenced, and they require special handling during\n * the disposal process.\n *\n * `GLTFLoader` supports the following glTF 2.0 extensions:\n * - KHR_draco_mesh_compression\n * - KHR_materials_clearcoat\n * - KHR_materials_dispersion\n * - KHR_materials_ior\n * - KHR_materials_specular\n * - KHR_materials_transmission\n * - KHR_materials_iridescence\n * - KHR_materials_unlit\n * - KHR_materials_volume\n * - KHR_mesh_quantization\n * - KHR_lights_punctual\n * - KHR_texture_basisu\n * - KHR_texture_transform\n * - EXT_texture_webp\n * - EXT_meshopt_compression\n * - EXT_mesh_gpu_instancing\n *\n * The following glTF 2.0 extension is supported by an external user plugin:\n * - [KHR_materials_variants]{@link https://github.com/takahirox/three-gltf-extensions}\n * - [MSFT_texture_dds]{@link https://github.com/takahirox/three-gltf-extensions}\n *\n * ```js\n * const loader = new GLTFLoader();\n *\n * // Optional: Provide a DRACOLoader instance to decode compressed mesh data\n * const dracoLoader = new DRACOLoader();\n * dracoLoader.setDecoderPath( '/examples/jsm/libs/draco/' );\n * loader.setDRACOLoader( dracoLoader );\n *\n * const gltf = await loader.loadAsync( 'models/gltf/duck/duck.gltf' );\n * scene.add( gltf.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n */\nclass GLTFLoader extends Loader {\n\n\t/**\n\t * Constructs a new glTF loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ktx2Loader = null;\n\t\tthis.meshoptDecoder = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsDispersionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureWebPExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureAVIFExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSheenExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIorExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsEmissiveStrengthExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSpecularExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIridescenceExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsAnisotropyExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsBumpExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFLightsExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshoptCompression( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshGpuInstancing( parser );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded glTF asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet resourcePath;\n\n\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\tresourcePath = this.resourcePath;\n\n\t\t} else if ( this.path !== '' ) {\n\n\t\t\t// If a base path is set, resources will be relative paths from that plus the relative path of the gltf file\n\t\t\t// Example  path = 'https://my-cnd-server.com/', url = 'assets/models/model.gltf'\n\t\t\t// resourcePath = 'https://my-cnd-server.com/assets/models/'\n\t\t\t// referenced resource 'model.bin' will be loaded from 'https://my-cnd-server.com/assets/models/model.bin'\n\t\t\t// referenced resource '../textures/texture.png' will be loaded from 'https://my-cnd-server.com/assets/textures/texture.png'\n\t\t\tconst relativeUrl = LoaderUtils.extractUrlBase( url );\n\t\t\tresourcePath = LoaderUtils.resolveURL( relativeUrl, this.path );\n\n\t\t} else {\n\n\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\tthis.manager.itemStart( url );\n\n\t\tconst _onError = function ( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t};\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, _onError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\t_onError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, _onError );\n\n\t}\n\n\t/**\n\t * Sets the given Draco loader to this loader. Required for decoding assets\n\t * compressed with the `KHR_draco_mesh_compression` extension.\n\t *\n\t * @param {DRACOLoader} dracoLoader - The Draco loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetDRACOLoader( dracoLoader ) {\n\n\t\tthis.dracoLoader = dracoLoader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given KTX2 loader to this loader. Required for loading KTX2\n\t * compressed textures.\n\t *\n\t * @param {KTX2Loader} ktx2Loader - The KTX2 loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetKTX2Loader( ktx2Loader ) {\n\n\t\tthis.ktx2Loader = ktx2Loader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given meshopt decoder. Required for decoding assets\n\t * compressed with the `EXT_meshopt_compression` extension.\n\t *\n\t * @param {Object} meshoptDecoder - The meshopt decoder to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetMeshoptDecoder( meshoptDecoder ) {\n\n\t\tthis.meshoptDecoder = meshoptDecoder;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Registers a plugin callback. This API is internally used to implement the various\n\t * glTF extensions but can also used by third-party code to add additional logic\n\t * to the loader.\n\t *\n\t * @param {function(parser:GLTFParser)} callback - The callback function to register.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Unregisters a plugin callback.\n\t *\n\t * @param {Function} callback - The callback function to unregister.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses the given FBX data and returns the resulting group.\n\t *\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tparse( data, path, onLoad, onError ) {\n\n\t\tlet json;\n\t\tconst extensions = {};\n\t\tconst plugins = {};\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tif ( typeof data === 'string' ) {\n\n\t\t\tjson = JSON.parse( data );\n\n\t\t} else if ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst magic = textDecoder.decode( new Uint8Array( data, 0, 4 ) );\n\n\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tjson = JSON.parse( extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content );\n\n\t\t\t} else {\n\n\t\t\t\tjson = JSON.parse( textDecoder.decode( data ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tjson = data;\n\n\t\t}\n\n\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst parser = new GLTFParser( json, {\n\n\t\t\tpath: path || this.resourcePath || '',\n\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\trequestHeader: this.requestHeader,\n\t\t\tmanager: this.manager,\n\t\t\tktx2Loader: this.ktx2Loader,\n\t\t\tmeshoptDecoder: this.meshoptDecoder\n\n\t\t} );\n\n\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\tfor ( let i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\tconst plugin = this.pluginCallbacks[ i ]( parser );\n\n\t\t\tif ( ! plugin.name ) console.error( 'THREE.GLTFLoader: Invalid plugin found: missing name' );\n\n\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t// Remove this workaround if we move all the existing\n\t\t\t// extension handlers to plugin system\n\t\t\textensions[ plugin.name ] = true;\n\n\t\t}\n\n\t\tif ( json.extensionsUsed ) {\n\n\t\t\tfor ( let i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\tconst extensionName = json.extensionsUsed[ i ];\n\t\t\t\tconst extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tparser.setExtensions( extensions );\n\t\tparser.setPlugins( plugins );\n\t\tparser.parse( onLoad, onError );\n\n\t}\n\n\t/**\n\t * Async version of {@link GLTFLoader#parse}.\n\t *\n\t * @async\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @return {Promise<GLTFLoader~LoadObject>} A Promise that resolves with the loaded glTF when the parsing has been finished.\n\t */\n\tparseAsync( data, path ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.parse( data, path, resolve, reject );\n\n\t\t} );\n\n\t}\n\n}\n\n/* GLTFREGISTRY */\n\nfunction GLTFRegistry() {\n\n\tlet objects = {};\n\n\treturn\t{\n\n\t\tget: function ( key ) {\n\n\t\t\treturn objects[ key ];\n\n\t\t},\n\n\t\tadd: function ( key, object ) {\n\n\t\t\tobjects[ key ] = object;\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete objects[ key ];\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\tobjects = {};\n\n\t\t}\n\n\t};\n\n}\n\n/*********************************/\n/********** EXTENSIONS ***********/\n/*********************************/\n\nconst EXTENSIONS = {\n\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\tKHR_MATERIALS_DISPERSION: 'KHR_materials_dispersion',\n\tKHR_MATERIALS_IOR: 'KHR_materials_ior',\n\tKHR_MATERIALS_SHEEN: 'KHR_materials_sheen',\n\tKHR_MATERIALS_SPECULAR: 'KHR_materials_specular',\n\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\tKHR_MATERIALS_IRIDESCENCE: 'KHR_materials_iridescence',\n\tKHR_MATERIALS_ANISOTROPY: 'KHR_materials_anisotropy',\n\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\tKHR_MATERIALS_VOLUME: 'KHR_materials_volume',\n\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\tKHR_MATERIALS_EMISSIVE_STRENGTH: 'KHR_materials_emissive_strength',\n\tEXT_MATERIALS_BUMP: 'EXT_materials_bump',\n\tEXT_TEXTURE_WEBP: 'EXT_texture_webp',\n\tEXT_TEXTURE_AVIF: 'EXT_texture_avif',\n\tEXT_MESHOPT_COMPRESSION: 'EXT_meshopt_compression',\n\tEXT_MESH_GPU_INSTANCING: 'EXT_mesh_gpu_instancing'\n};\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n *\n * @private\n */\nclass GLTFLightsExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\t// Object3D instance caches\n\t\tthis.cache = { refs: {}, uses: {} };\n\n\t}\n\n\t_markDefs() {\n\n\t\tconst parser = this.parser;\n\t\tconst nodeDefs = this.parser.json.nodes || [];\n\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t\t&& nodeDef.extensions[ this.name ]\n\t\t\t\t\t&& nodeDef.extensions[ this.name ].light !== undefined ) {\n\n\t\t\t\tparser._addNodeRef( this.cache, nodeDef.extensions[ this.name ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_loadLight( lightIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst cacheKey = 'light:' + lightIndex;\n\t\tlet dependency = parser.cache.get( cacheKey );\n\n\t\tif ( dependency ) return dependency;\n\n\t\tconst json = parser.json;\n\t\tconst extensions = ( json.extensions && json.extensions[ this.name ] ) || {};\n\t\tconst lightDefs = extensions.lights || [];\n\t\tconst lightDef = lightDefs[ lightIndex ];\n\t\tlet lightNode;\n\n\t\tconst color = new Color( 0xffffff );\n\n\t\tif ( lightDef.color !== undefined ) color.setRGB( lightDef.color[ 0 ], lightDef.color[ 1 ], lightDef.color[ 2 ], LinearSRGBColorSpace );\n\n\t\tconst range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type: ' + lightDef.type );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tassignExtrasToUserData( lightNode, lightDef );\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = parser.createUniqueName( lightDef.name || ( 'light_' + lightIndex ) );\n\n\t\tdependency = Promise.resolve( lightNode );\n\n\t\tparser.cache.add( cacheKey, dependency );\n\n\t\treturn dependency;\n\n\t}\n\n\tgetDependency( type, index ) {\n\n\t\tif ( type !== 'light' ) return;\n\n\t\treturn this._loadLight( index );\n\n\t}\n\n\tcreateNodeAttachment( nodeIndex ) {\n\n\t\tconst self = this;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\t\tconst lightDef = ( nodeDef.extensions && nodeDef.extensions[ this.name ] ) || {};\n\t\tconst lightIndex = lightDef.light;\n\n\t\tif ( lightIndex === undefined ) return null;\n\n\t\treturn this._loadLight( lightIndex ).then( function ( light ) {\n\n\t\t\treturn parser._getNodeRef( self.cache, lightIndex, light );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n *\n * @private\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tgetMaterialType() {\n\n\t\treturn MeshBasicMaterial;\n\n\t}\n\n\textendParams( materialParams, materialDef, parser ) {\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n *\n * @private\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst emissiveStrength = materialDef.extensions[ this.name ].emissiveStrength;\n\n\t\tif ( emissiveStrength !== undefined ) {\n\n\t\t\tmaterialParams.emissiveIntensity = emissiveStrength;\n\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n *\n * @private\n */\nclass GLTFMaterialsClearcoatExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_dispersion\n *\n * @private\n */\nclass GLTFMaterialsDispersionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_DISPERSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.dispersion = extension.dispersion !== undefined ? extension.dispersion : 0;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n *\n * @private\n */\nclass GLTFMaterialsIridescenceExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IRIDESCENCE;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.iridescenceFactor !== undefined ) {\n\n\t\t\tmaterialParams.iridescence = extension.iridescenceFactor;\n\n\t\t}\n\n\t\tif ( extension.iridescenceTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceMap', extension.iridescenceTexture ) );\n\n\t\t}\n\n\t\tif ( extension.iridescenceIor !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceIOR = extension.iridescenceIor;\n\n\t\t}\n\n\t\tif ( materialParams.iridescenceThicknessRange === undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange = [ 100, 400 ];\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMinimum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 0 ] = extension.iridescenceThicknessMinimum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMaximum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 1 ] = extension.iridescenceThicknessMaximum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceThicknessMap', extension.iridescenceThicknessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n *\n * @private\n */\nclass GLTFMaterialsSheenExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SHEEN;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.sheenColor = new Color( 0, 0, 0 );\n\t\tmaterialParams.sheenRoughness = 0;\n\t\tmaterialParams.sheen = 1;\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.sheenColorFactor !== undefined ) {\n\n\t\t\tconst colorFactor = extension.sheenColorFactor;\n\t\t\tmaterialParams.sheenColor.setRGB( colorFactor[ 0 ], colorFactor[ 1 ], colorFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.sheenRoughness = extension.sheenRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.sheenColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenColorMap', extension.sheenColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenRoughnessMap', extension.sheenRoughnessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n *\n * @private\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n *\n * @private\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_VOLUME;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.thickness = extension.thicknessFactor !== undefined ? extension.thicknessFactor : 0;\n\n\t\tif ( extension.thicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'thicknessMap', extension.thicknessTexture ) );\n\n\t\t}\n\n\t\tmaterialParams.attenuationDistance = extension.attenuationDistance || Infinity;\n\n\t\tconst colorArray = extension.attenuationColor || [ 1, 1, 1 ];\n\t\tmaterialParams.attenuationColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n *\n * @private\n */\nclass GLTFMaterialsIorExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IOR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.ior = extension.ior !== undefined ? extension.ior : 1.5;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n *\n * @private\n */\nclass GLTFMaterialsSpecularExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SPECULAR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.specularIntensity = extension.specularFactor !== undefined ? extension.specularFactor : 1.0;\n\n\t\tif ( extension.specularTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularIntensityMap', extension.specularTexture ) );\n\n\t\t}\n\n\t\tconst colorArray = extension.specularColorFactor || [ 1, 1, 1 ];\n\t\tmaterialParams.specularColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\tif ( extension.specularColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularColorMap', extension.specularColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n *\n * @private\n */\nclass GLTFMaterialsBumpExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_MATERIALS_BUMP;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.bumpScale = extension.bumpFactor !== undefined ? extension.bumpFactor : 1.0;\n\n\t\tif ( extension.bumpTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'bumpMap', extension.bumpTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials anisotropy Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_anisotropy\n *\n * @private\n */\nclass GLTFMaterialsAnisotropyExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_ANISOTROPY;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.anisotropyStrength !== undefined ) {\n\n\t\t\tmaterialParams.anisotropy = extension.anisotropyStrength;\n\n\t\t}\n\n\t\tif ( extension.anisotropyRotation !== undefined ) {\n\n\t\t\tmaterialParams.anisotropyRotation = extension.anisotropyRotation;\n\n\t\t}\n\n\t\tif ( extension.anisotropyTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'anisotropyMap', extension.anisotropyTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * BasisU Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n *\n * @private\n */\nclass GLTFTextureBasisUExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ this.name ];\n\t\tconst loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t\t} else {\n\n\t\t\t\t// Assumes that the extension is optional and that a fallback texture is present\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * WebP Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp\n *\n * @private\n */\nclass GLTFTextureWebPExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_WEBP;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * AVIF Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif\n *\n * @private\n */\nclass GLTFTextureAVIFExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_AVIF;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * meshopt BufferView Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_meshopt_compression\n *\n * @private\n */\nclass GLTFMeshoptCompression {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESHOPT_COMPRESSION;\n\t\tthis.parser = parser;\n\n\t}\n\n\tloadBufferView( index ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst bufferView = json.bufferViews[ index ];\n\n\t\tif ( bufferView.extensions && bufferView.extensions[ this.name ] ) {\n\n\t\t\tconst extensionDef = bufferView.extensions[ this.name ];\n\n\t\t\tconst buffer = this.parser.getDependency( 'buffer', extensionDef.buffer );\n\t\t\tconst decoder = this.parser.options.meshoptDecoder;\n\n\t\t\tif ( ! decoder || ! decoder.supported ) {\n\n\t\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Assumes that the extension is optional and that fallback buffer data is present\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn buffer.then( function ( res ) {\n\n\t\t\t\tconst byteOffset = extensionDef.byteOffset || 0;\n\t\t\t\tconst byteLength = extensionDef.byteLength || 0;\n\n\t\t\t\tconst count = extensionDef.count;\n\t\t\t\tconst stride = extensionDef.byteStride;\n\n\t\t\t\tconst source = new Uint8Array( res, byteOffset, byteLength );\n\n\t\t\t\tif ( decoder.decodeGltfBufferAsync ) {\n\n\t\t\t\t\treturn decoder.decodeGltfBufferAsync( count, stride, source, extensionDef.mode, extensionDef.filter ).then( function ( res ) {\n\n\t\t\t\t\t\treturn res.buffer;\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Support for MeshoptDecoder 0.18 or earlier, without decodeGltfBufferAsync\n\t\t\t\t\treturn decoder.ready.then( function () {\n\n\t\t\t\t\t\tconst result = new ArrayBuffer( count * stride );\n\t\t\t\t\t\tdecoder.decodeGltfBuffer( new Uint8Array( result ), count, stride, source, extensionDef.mode, extensionDef.filter );\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n *\n * @private\n */\nclass GLTFMeshGpuInstancing {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESH_GPU_INSTANCING;\n\t\tthis.parser = parser;\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( ! nodeDef.extensions || ! nodeDef.extensions[ this.name ] ||\n\t\t\tnodeDef.mesh === undefined ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst meshDef = json.meshes[ nodeDef.mesh ];\n\n\t\t// No Points or Lines + Instancing support yet\n\n\t\tfor ( const primitive of meshDef.primitives ) {\n\n\t\t\tif ( primitive.mode !== WEBGL_CONSTANTS.TRIANGLES &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_STRIP &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_FAN &&\n\t\t\t\t primitive.mode !== undefined ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extensionDef = nodeDef.extensions[ this.name ];\n\t\tconst attributesDef = extensionDef.attributes;\n\n\t\t// @TODO: Can we support InstancedMesh + SkinnedMesh?\n\n\t\tconst pending = [];\n\t\tconst attributes = {};\n\n\t\tfor ( const key in attributesDef ) {\n\n\t\t\tpending.push( this.parser.getDependency( 'accessor', attributesDef[ key ] ).then( accessor => {\n\n\t\t\t\tattributes[ key ] = accessor;\n\t\t\t\treturn attributes[ key ];\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( pending.length < 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tpending.push( this.parser.createNodeMesh( nodeIndex ) );\n\n\t\treturn Promise.all( pending ).then( results => {\n\n\t\t\tconst nodeObject = results.pop();\n\t\t\tconst meshes = nodeObject.isGroup ? nodeObject.children : [ nodeObject ];\n\t\t\tconst count = results[ 0 ].count; // All attribute counts should be same\n\t\t\tconst instancedMeshes = [];\n\n\t\t\tfor ( const mesh of meshes ) {\n\n\t\t\t\t// Temporal variables\n\t\t\t\tconst m = new Matrix4();\n\t\t\t\tconst p = new Vector3();\n\t\t\t\tconst q = new Quaternion();\n\t\t\t\tconst s = new Vector3( 1, 1, 1 );\n\n\t\t\t\tconst instancedMesh = new InstancedMesh( mesh.geometry, mesh.material, count );\n\n\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\tif ( attributes.TRANSLATION ) {\n\n\t\t\t\t\t\tp.fromBufferAttribute( attributes.TRANSLATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.ROTATION ) {\n\n\t\t\t\t\t\tq.fromBufferAttribute( attributes.ROTATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.SCALE ) {\n\n\t\t\t\t\t\ts.fromBufferAttribute( attributes.SCALE, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinstancedMesh.setMatrixAt( i, m.compose( p, q, s ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Add instance attributes to the geometry, excluding TRS.\n\t\t\t\tfor ( const attributeName in attributes ) {\n\n\t\t\t\t\tif ( attributeName === '_COLOR_0' ) {\n\n\t\t\t\t\t\tconst attr = attributes[ attributeName ];\n\t\t\t\t\t\tinstancedMesh.instanceColor = new InstancedBufferAttribute( attr.array, attr.itemSize, attr.normalized );\n\n\t\t\t\t\t} else if ( attributeName !== 'TRANSLATION' &&\n\t\t\t\t\t\t attributeName !== 'ROTATION' &&\n\t\t\t\t\t\t attributeName !== 'SCALE' ) {\n\n\t\t\t\t\t\tmesh.geometry.setAttribute( attributeName, attributes[ attributeName ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Just in case\n\t\t\t\tObject3D.prototype.copy.call( instancedMesh, mesh );\n\n\t\t\t\tthis.parser.assignFinalMaterial( instancedMesh );\n\n\t\t\t\tinstancedMeshes.push( instancedMesh );\n\n\t\t\t}\n\n\t\t\tif ( nodeObject.isGroup ) {\n\n\t\t\t\tnodeObject.clear();\n\n\t\t\t\tnodeObject.add( ... instancedMeshes );\n\n\t\t\t\treturn nodeObject;\n\n\t\t\t}\n\n\t\t\treturn instancedMeshes[ 0 ];\n\n\t\t} );\n\n\t}\n\n}\n\n/* BINARY EXTENSION */\nconst BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nconst BINARY_EXTENSION_HEADER_LENGTH = 12;\nconst BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\nclass GLTFBinaryExtension {\n\n\tconstructor( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tconst headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tthis.header = {\n\t\t\tmagic: textDecoder.decode( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tconst chunkContentsLength = this.header.length - BINARY_EXTENSION_HEADER_LENGTH;\n\t\tconst chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tlet chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkContentsLength ) {\n\n\t\t\tconst chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tconst chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tconst contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = textDecoder.decode( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tconst byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * DRACO Mesh Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n *\n * @private\n */\nclass GLTFDracoMeshCompressionExtension {\n\n\tconstructor( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tdecodePrimitive( primitive, parser ) {\n\n\t\tconst json = this.json;\n\t\tconst dracoLoader = this.dracoLoader;\n\t\tconst bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tconst gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tconst threeAttributeMap = {};\n\t\tconst attributeNormalizedMap = {};\n\t\tconst attributeTypeMap = {};\n\n\t\tfor ( const attributeName in gltfAttributeMap ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( const attributeName in primitive.attributes ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tconst accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tconst componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType.name;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( const attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tconst normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap, LinearSRGBColorSpace, reject );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Texture Transform Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n *\n * @private\n */\nclass GLTFTextureTransformExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\textendTexture( texture, transform ) {\n\n\t\tif ( ( transform.texCoord === undefined || transform.texCoord === texture.channel )\n\t\t\t&& transform.offset === undefined\n\t\t\t&& transform.rotation === undefined\n\t\t\t&& transform.scale === undefined ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21819.\n\t\t\treturn texture;\n\n\t\t}\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\ttexture.channel = transform.texCoord;\n\n\t\t}\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Mesh Quantization Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n *\n * @private\n */\nclass GLTFMeshQuantizationExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n}\n\n/*********************************/\n/********** INTERPOLATION ********/\n/*********************************/\n\n// Spline Interpolation\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\nclass GLTFCubicSplineInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( let i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer;\n\t\tconst values = this.sampleValues;\n\t\tconst stride = this.valueSize;\n\n\t\tconst stride2 = stride * 2;\n\t\tconst stride3 = stride * 3;\n\n\t\tconst td = t1 - t0;\n\n\t\tconst p = ( t - t0 ) / td;\n\t\tconst pp = p * p;\n\t\tconst ppp = pp * p;\n\n\t\tconst offset1 = i1 * stride3;\n\t\tconst offset0 = offset1 - stride3;\n\n\t\tconst s2 = - 2 * ppp + 3 * pp;\n\t\tconst s3 = ppp - pp;\n\t\tconst s0 = 1 - s2;\n\t\tconst s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( let i = 0; i !== stride; i ++ ) {\n\n\t\t\tconst p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tconst m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tconst p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tconst m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nconst _quaternion = new Quaternion();\n\nclass GLTFCubicSplineQuaternionInterpolant extends GLTFCubicSplineInterpolant {\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = super.interpolate_( i1, t0, t, t1 );\n\n\t\t_quaternion.fromArray( result ).normalize().toArray( result );\n\n\t\treturn result;\n\n\t}\n\n}\n\n\n/*********************************/\n/********** INTERNALS ************/\n/*********************************/\n\n/* CONSTANTS */\n\nconst WEBGL_CONSTANTS = {\n\tFLOAT: 5126,\n\t//FLOAT_MAT2: 35674,\n\tFLOAT_MAT3: 35675,\n\tFLOAT_MAT4: 35676,\n\tFLOAT_VEC2: 35664,\n\tFLOAT_VEC3: 35665,\n\tFLOAT_VEC4: 35666,\n\tLINEAR: 9729,\n\tREPEAT: 10497,\n\tSAMPLER_2D: 35678,\n\tPOINTS: 0,\n\tLINES: 1,\n\tLINE_LOOP: 2,\n\tLINE_STRIP: 3,\n\tTRIANGLES: 4,\n\tTRIANGLE_STRIP: 5,\n\tTRIANGLE_FAN: 6,\n\tUNSIGNED_BYTE: 5121,\n\tUNSIGNED_SHORT: 5123\n};\n\nconst WEBGL_COMPONENT_TYPES = {\n\t5120: Int8Array,\n\t5121: Uint8Array,\n\t5122: Int16Array,\n\t5123: Uint16Array,\n\t5125: Uint32Array,\n\t5126: Float32Array\n};\n\nconst WEBGL_FILTERS = {\n\t9728: NearestFilter,\n\t9729: LinearFilter,\n\t9984: NearestMipmapNearestFilter,\n\t9985: LinearMipmapNearestFilter,\n\t9986: NearestMipmapLinearFilter,\n\t9987: LinearMipmapLinearFilter\n};\n\nconst WEBGL_WRAPPINGS = {\n\t33071: ClampToEdgeWrapping,\n\t33648: MirroredRepeatWrapping,\n\t10497: RepeatWrapping\n};\n\nconst WEBGL_TYPE_SIZES = {\n\t'SCALAR': 1,\n\t'VEC2': 2,\n\t'VEC3': 3,\n\t'VEC4': 4,\n\t'MAT2': 4,\n\t'MAT3': 9,\n\t'MAT4': 16\n};\n\nconst ATTRIBUTES = {\n\tPOSITION: 'position',\n\tNORMAL: 'normal',\n\tTANGENT: 'tangent',\n\tTEXCOORD_0: 'uv',\n\tTEXCOORD_1: 'uv1',\n\tTEXCOORD_2: 'uv2',\n\tTEXCOORD_3: 'uv3',\n\tCOLOR_0: 'color',\n\tWEIGHTS_0: 'skinWeight',\n\tJOINTS_0: 'skinIndex',\n};\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\ttranslation: 'position',\n\trotation: 'quaternion',\n\tweights: 'morphTargetInfluences'\n};\n\nconst INTERPOLATION = {\n\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\tLINEAR: InterpolateLinear,\n\tSTEP: InterpolateDiscrete\n};\n\nconst ALPHA_MODES = {\n\tOPAQUE: 'OPAQUE',\n\tMASK: 'MASK',\n\tBLEND: 'BLEND'\n};\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n *\n * @private\n * @param {Object<string, Material>} cache\n * @return {Material}\n */\nfunction createDefaultMaterial( cache ) {\n\n\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: FrontSide\n\t\t} );\n\n\t}\n\n\treturn cache[ 'DefaultMaterial' ];\n\n}\n\nfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t// Add unknown glTF extensions to an object's userData.\n\n\tfor ( const name in objectDef.extensions ) {\n\n\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t}\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {Object3D|Material|BufferGeometry|Object|AnimationClip} object\n * @param {GLTF.definition} gltfDef\n */\nfunction assignExtrasToUserData( object, gltfDef ) {\n\n\tif ( gltfDef.extras !== undefined ) {\n\n\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {Array<GLTF.Target>} targets\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addMorphTargets( geometry, targets, parser ) {\n\n\tlet hasMorphPosition = false;\n\tlet hasMorphNormal = false;\n\tlet hasMorphColor = false;\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\t\tif ( target.COLOR_0 !== undefined ) hasMorphColor = true;\n\n\t\tif ( hasMorphPosition && hasMorphNormal && hasMorphColor ) break;\n\n\t}\n\n\tif ( ! hasMorphPosition && ! hasMorphNormal && ! hasMorphColor ) return Promise.resolve( geometry );\n\n\tconst pendingPositionAccessors = [];\n\tconst pendingNormalAccessors = [];\n\tconst pendingColorAccessors = [];\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( hasMorphPosition ) {\n\n\t\t\tconst pendingAccessor = target.POSITION !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t: geometry.attributes.position;\n\n\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphNormal ) {\n\n\t\t\tconst pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t: geometry.attributes.normal;\n\n\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphColor ) {\n\n\t\t\tconst pendingAccessor = target.COLOR_0 !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.COLOR_0 )\n\t\t\t\t: geometry.attributes.color;\n\n\t\t\tpendingColorAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t}\n\n\treturn Promise.all( [\n\t\tPromise.all( pendingPositionAccessors ),\n\t\tPromise.all( pendingNormalAccessors ),\n\t\tPromise.all( pendingColorAccessors )\n\t] ).then( function ( accessors ) {\n\n\t\tconst morphPositions = accessors[ 0 ];\n\t\tconst morphNormals = accessors[ 1 ];\n\t\tconst morphColors = accessors[ 2 ];\n\n\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\tif ( hasMorphColor ) geometry.morphAttributes.color = morphColors;\n\t\tgeometry.morphTargetsRelative = true;\n\n\t\treturn geometry;\n\n\t} );\n\n}\n\n/**\n *\n * @private\n * @param {Mesh} mesh\n * @param {GLTF.Mesh} meshDef\n */\nfunction updateMorphTargets( mesh, meshDef ) {\n\n\tmesh.updateMorphTargets();\n\n\tif ( meshDef.weights !== undefined ) {\n\n\t\tfor ( let i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t}\n\n\t}\n\n\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\tconst targetNames = meshDef.extras.targetNames;\n\n\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\tfor ( let i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t}\n\n\t}\n\n}\n\nfunction createPrimitiveKey( primitiveDef ) {\n\n\tlet geometryKey;\n\n\tconst dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\n\tif ( dracoExtension ) {\n\n\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t} else {\n\n\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t}\n\n\tif ( primitiveDef.targets !== undefined ) {\n\n\t\tfor ( let i = 0, il = primitiveDef.targets.length; i < il; i ++ ) {\n\n\t\t\tgeometryKey += ':' + createAttributesKey( primitiveDef.targets[ i ] );\n\n\t\t}\n\n\t}\n\n\treturn geometryKey;\n\n}\n\nfunction createAttributesKey( attributes ) {\n\n\tlet attributesKey = '';\n\n\tconst keys = Object.keys( attributes ).sort();\n\n\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t}\n\n\treturn attributesKey;\n\n}\n\nfunction getNormalizedComponentScale( constructor ) {\n\n\t// Reference:\n\t// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization#encoding-quantized-data\n\n\tswitch ( constructor ) {\n\n\t\tcase Int8Array:\n\t\t\treturn 1 / 127;\n\n\t\tcase Uint8Array:\n\t\t\treturn 1 / 255;\n\n\t\tcase Int16Array:\n\t\t\treturn 1 / 32767;\n\n\t\tcase Uint16Array:\n\t\t\treturn 1 / 65535;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported normalized accessor component type.' );\n\n\t}\n\n}\n\nfunction getImageURIMimeType( uri ) {\n\n\tif ( uri.search( /\\.jpe?g($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/jpeg/ ) === 0 ) return 'image/jpeg';\n\tif ( uri.search( /\\.webp($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/webp/ ) === 0 ) return 'image/webp';\n\tif ( uri.search( /\\.ktx2($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/ktx2/ ) === 0 ) return 'image/ktx2';\n\n\treturn 'image/png';\n\n}\n\nconst _identityMatrix = new Matrix4();\n\n/* GLTF PARSER */\n\nclass GLTFParser {\n\n\tconstructor( json = {}, options = {} ) {\n\n\t\tthis.json = json;\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options;\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Node cache\n\t\tthis.nodeCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\tthis.sourceCache = {};\n\t\tthis.textureCache = {};\n\n\t\t// Track node names, to ensure no duplicates\n\t\tthis.nodeNamesUsed = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\n\t\tlet isSafari = false;\n\t\tlet safariVersion = - 1;\n\t\tlet isFirefox = false;\n\t\tlet firefoxVersion = - 1;\n\n\t\tif ( typeof navigator !== 'undefined' ) {\n\n\t\t\tconst userAgent = navigator.userAgent;\n\n\t\t\tisSafari = /^((?!chrome|android).)*safari/i.test( userAgent ) === true;\n\t\t\tconst safariMatch = userAgent.match( /Version\\/(\\d+)/ );\n\t\t\tsafariVersion = isSafari && safariMatch ? parseInt( safariMatch[ 1 ], 10 ) : - 1;\n\n\t\t\tisFirefox = userAgent.indexOf( 'Firefox' ) > - 1;\n\t\t\tfirefoxVersion = isFirefox ? userAgent.match( /Firefox\\/([0-9]+)\\./ )[ 1 ] : - 1;\n\n\t\t}\n\n\t\tif ( typeof createImageBitmap === 'undefined' || ( isSafari && safariVersion < 17 ) || ( isFirefox && firefoxVersion < 98 ) ) {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\t\tthis.textureLoader.setRequestHeader( this.options.requestHeader );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tsetExtensions( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\tparse( onLoad, onError ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\t\tthis.nodeCache = {};\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\treturn ext._markDefs && ext._markDefs();\n\n\t\t} );\n\n\t\tPromise.all( this._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.beforeRoot && ext.beforeRoot();\n\n\t\t} ) ).then( function () {\n\n\t\t\treturn Promise.all( [\n\n\t\t\t\tparser.getDependencies( 'scene' ),\n\t\t\t\tparser.getDependencies( 'animation' ),\n\t\t\t\tparser.getDependencies( 'camera' ),\n\n\t\t\t] );\n\n\t\t} ).then( function ( dependencies ) {\n\n\t\t\tconst result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\treturn Promise.all( parser._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.afterRoot && ext.afterRoot( result );\n\n\t\t\t} ) ).then( function () {\n\n\t\t\t\tfor ( const scene of result.scenes ) {\n\n\t\t\t\t\tscene.updateMatrixWorld();\n\n\t\t\t\t}\n\n\t\t\t\tonLoad( result );\n\n\t\t\t} );\n\n\t\t} ).catch( onError );\n\n\t}\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t *\n\t * @private\n\t */\n\t_markDefs() {\n\n\t\tconst nodeDefs = this.json.nodes || [];\n\t\tconst skinDefs = this.json.skins || [];\n\t\tconst meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tconst joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( let i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {Object3D} index\n\t */\n\t_addNodeRef( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t}\n\n\t/**\n\t * Returns a reference to a shared resource, cloning it if necessary.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {number} index\n\t * @param {Object} object\n\t * @return {Object}\n\t */\n\t_getNodeRef( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tconst ref = object.clone();\n\n\t\t// Propagates mappings to the cloned object, prevents mappings on the\n\t\t// original object from being lost.\n\t\tconst updateMappings = ( original, clone ) => {\n\n\t\t\tconst mappings = this.associations.get( original );\n\t\t\tif ( mappings != null ) {\n\n\t\t\t\tthis.associations.set( clone, mappings );\n\n\t\t\t}\n\n\t\t\tfor ( const [ i, child ] of original.children.entries() ) {\n\n\t\t\t\tupdateMappings( child, clone.children[ i ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\tupdateMappings( object, ref );\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t}\n\n\t_invokeOne( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t_invokeAll( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) pending.push( result );\n\n\t\t}\n\n\t\treturn pending;\n\n\t}\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tgetDependency( type, index ) {\n\n\t\tconst cacheKey = type + ':' + index;\n\t\tlet dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadNode && ext.loadNode( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadAnimation && ext.loadAnimation( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext != this && ext.getDependency && ext.getDependency( type, index );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( ! dependency ) {\n\n\t\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t}\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tgetDependencies( type ) {\n\n\t\tlet dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tconst parser = this;\n\t\t\tconst defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBuffer( bufferIndex ) {\n\n\t\tconst bufferDef = this.json.buffers[ bufferIndex ];\n\t\tconst loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tconst options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( LoaderUtils.resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBufferView( bufferViewIndex ) {\n\n\t\tconst bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tconst byteLength = bufferViewDef.byteLength || 0;\n\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t *\n\t * @private\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tloadAccessor( accessorIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\t\t\tconst normalized = accessorDef.normalized === true;\n\n\t\t\tconst array = new TypedArray( accessorDef.count * itemSize );\n\t\t\treturn Promise.resolve( new BufferAttribute( array, itemSize, normalized ) );\n\n\t\t}\n\n\t\tconst pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tconst bufferView = bufferViews[ 0 ];\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tconst elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tconst itemBytes = elementBytes * itemSize;\n\t\t\tconst byteOffset = accessorDef.byteOffset || 0;\n\t\t\tconst byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tconst normalized = accessorDef.normalized === true;\n\t\t\tlet array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tconst ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tconst ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tlet ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tconst itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tconst TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tconst byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tconst byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tconst sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tconst sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\t// Ignore normalized since we copy from sparse\n\t\t\t\tbufferAttribute.normalized = false;\n\n\t\t\t\tfor ( let i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute.normalized = normalized;\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t *\n\t * @private\n\t * @param {number} textureIndex\n\t * @return {Promise<?Texture>}\n\t */\n\tloadTexture( textureIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceIndex = textureDef.source;\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tlet loader = this.textureLoader;\n\n\t\tif ( sourceDef.uri ) {\n\n\t\t\tconst handler = options.manager.getHandler( sourceDef.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, sourceIndex, loader );\n\n\t}\n\n\tloadTextureImage( textureIndex, sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst cacheKey = ( sourceDef.uri || sourceDef.bufferView ) + ':' + textureDef.sampler;\n\n\t\tif ( this.textureCache[ cacheKey ] ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21559.\n\t\t\treturn this.textureCache[ cacheKey ];\n\n\t\t}\n\n\t\tconst promise = this.loadImageSource( sourceIndex, loader ).then( function ( texture ) {\n\n\t\t\ttexture.flipY = false;\n\n\t\t\ttexture.name = textureDef.name || sourceDef.name || '';\n\n\t\t\tif ( texture.name === '' && typeof sourceDef.uri === 'string' && sourceDef.uri.startsWith( 'data:image/' ) === false ) {\n\n\t\t\t\ttexture.name = sourceDef.uri;\n\n\t\t\t}\n\n\t\t\tconst samplers = json.samplers || {};\n\t\t\tconst sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\t\t\ttexture.generateMipmaps = ! texture.isCompressedTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t\tparser.associations.set( texture, { textures: textureIndex } );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function () {\n\n\t\t\treturn null;\n\n\t\t} );\n\n\t\tthis.textureCache[ cacheKey ] = promise;\n\n\t\treturn promise;\n\n\t}\n\n\tloadImageSource( sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( this.sourceCache[ sourceIndex ] !== undefined ) {\n\n\t\t\treturn this.sourceCache[ sourceIndex ].then( ( texture ) => texture.clone() );\n\n\t\t}\n\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst URL = self.URL || self.webkitURL;\n\n\t\tlet sourceURI = sourceDef.uri || '';\n\t\tlet isObjectURL = false;\n\n\t\tif ( sourceDef.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', sourceDef.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tconst blob = new Blob( [ bufferView ], { type: sourceDef.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t} else if ( sourceDef.uri === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Image ' + sourceIndex + ' is missing URI and bufferView' );\n\n\t\t}\n\n\t\tconst promise = Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tlet onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tconst texture = new Texture( imageBitmap );\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tresolve( texture );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( LoaderUtils.resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( texture, sourceDef );\n\n\t\t\ttexture.userData.mimeType = sourceDef.mimeType || getImageURIMimeType( sourceDef.uri );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function ( error ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader: Couldn\\'t load texture', sourceURI );\n\t\t\tthrow error;\n\n\t\t} );\n\n\t\tthis.sourceCache[ sourceIndex ] = promise;\n\t\treturn promise;\n\n\t}\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t *\n\t * @private\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @param {string} [colorSpace]\n\t * @return {Promise<Texture>}\n\t */\n\tassignTexture( materialParams, mapName, mapDef, colorSpace ) {\n\n\t\tconst parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture ) return null;\n\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord > 0 ) {\n\n\t\t\t\ttexture = texture.clone();\n\t\t\t\ttexture.channel = mapDef.texCoord;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tconst transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tconst gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = colorSpace;\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accommodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t *\n\t * @private\n\t * @param {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tassignFinalMaterial( mesh ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tlet material = mesh.material;\n\n\t\tconst useDerivativeTangents = geometry.attributes.tangent === undefined;\n\t\tconst useVertexColors = geometry.attributes.color !== undefined;\n\t\tconst useFlatShading = geometry.attributes.normal === undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tconst cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tlet pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tconst cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tlet lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.map = material.map;\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useDerivativeTangents || useVertexColors || useFlatShading ) {\n\n\t\t\tlet cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( useDerivativeTangents ) cacheKey += 'derivative-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\n\t\t\tlet cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\n\t\t\t\tif ( useDerivativeTangents ) {\n\n\t\t\t\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\t\tif ( cachedMaterial.normalScale ) cachedMaterial.normalScale.y *= - 1;\n\t\t\t\t\tif ( cachedMaterial.clearcoatNormalScale ) cachedMaterial.clearcoatNormalScale.y *= - 1;\n\n\t\t\t\t}\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t}\n\n\tgetMaterialType( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t *\n\t * @private\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tloadMaterial( materialIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst materialDef = json.materials[ materialIndex ];\n\n\t\tlet materialType;\n\t\tconst materialParams = {};\n\t\tconst materialExtensions = materialDef.extensions || {};\n\n\t\tconst pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tconst kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( Promise.all( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tconst alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = materialDef.normalTexture.scale;\n\n\t\t\t\tmaterialParams.normalScale.set( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tconst emissiveFactor = materialDef.emissiveFactor;\n\t\t\tmaterialParams.emissive = new Color().setRGB( emissiveFactor[ 0 ], emissiveFactor[ 1 ], emissiveFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tconst material = new materialType( materialParams );\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { materials: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * When Object3D instances are targeted by animation, they need unique names.\n\t *\n\t * @private\n\t * @param {string} originalName\n\t * @return {string}\n\t */\n\tcreateUniqueName( originalName ) {\n\n\t\tconst sanitizedName = PropertyBinding.sanitizeNodeName( originalName || '' );\n\n\t\tif ( sanitizedName in this.nodeNamesUsed ) {\n\n\t\t\treturn sanitizedName + '_' + ( ++ this.nodeNamesUsed[ sanitizedName ] );\n\n\t\t} else {\n\n\t\t\tthis.nodeNamesUsed[ sanitizedName ] = 0;\n\n\t\t\treturn sanitizedName;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @private\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tloadGeometries( primitives ) {\n\n\t\tconst parser = this;\n\t\tconst extensions = this.extensions;\n\t\tconst cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = primitives[ i ];\n\t\t\tconst cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tconst cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tlet geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t *\n\t * @private\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh|Line|Points>}\n\t */\n\tloadMesh( meshIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\tconst meshDef = json.meshes[ meshIndex ];\n\t\tconst primitives = meshDef.primitives;\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst materials = results.slice( 0, results.length - 1 );\n\t\t\tconst geometries = results[ results.length - 1 ];\n\n\t\t\tconst meshes = [];\n\n\t\t\tfor ( let i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) {\n\n\t\t\t\t\t\t// normalize skin weights to fix malformed assets (see #15319)\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = parser.createUniqueName( meshDef.name || ( 'mesh_' + meshIndex ) );\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tif ( primitive.extensions ) addUnknownExtensionsToUserData( extensions, mesh, primitive );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tparser.associations.set( meshes[ i ], {\n\t\t\t\t\tmeshes: meshIndex,\n\t\t\t\t\tprimitives: i\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, meshes[ 0 ], meshDef );\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tconst group = new Group();\n\n\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, group, meshDef );\n\n\t\t\tparser.associations.set( group, { meshes: meshIndex } );\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t *\n\t * @private\n\t * @param {number} cameraIndex\n\t * @return {Promise<Camera>|undefined}\n\t */\n\tloadCamera( cameraIndex ) {\n\n\t\tlet camera;\n\t\tconst cameraDef = this.json.cameras[ cameraIndex ];\n\t\tconst params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = this.createUniqueName( cameraDef.name );\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t *\n\t * @private\n\t * @param {number} skinIndex\n\t * @return {Promise<Skeleton>}\n\t */\n\tloadSkin( skinIndex ) {\n\n\t\tconst skinDef = this.json.skins[ skinIndex ];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = skinDef.joints.length; i < il; i ++ ) {\n\n\t\t\tpending.push( this._loadNodeShallow( skinDef.joints[ i ] ) );\n\n\t\t}\n\n\t\tif ( skinDef.inverseBindMatrices !== undefined ) {\n\n\t\t\tpending.push( this.getDependency( 'accessor', skinDef.inverseBindMatrices ) );\n\n\t\t} else {\n\n\t\t\tpending.push( null );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst inverseBindMatrices = results.pop();\n\t\t\tconst jointNodes = results;\n\n\t\t\t// Note that bones (joint nodes) may or may not be in the\n\t\t\t// scene graph at this time.\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( let i = 0, il = jointNodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst jointNode = jointNodes[ i ];\n\n\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\tconst mat = new Matrix4();\n\n\t\t\t\t\tif ( inverseBindMatrices !== null ) {\n\n\t\t\t\t\t\tmat.fromArray( inverseBindMatrices.array, i * 16 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinDef.joints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t *\n\t * @private\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tloadAnimation( animationIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst animationDef = json.animations[ animationIndex ];\n\t\tconst animationName = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\tconst pendingNodes = [];\n\t\tconst pendingInputAccessors = [];\n\t\tconst pendingOutputAccessors = [];\n\t\tconst pendingSamplers = [];\n\t\tconst pendingTargets = [];\n\n\t\tfor ( let i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tconst channel = animationDef.channels[ i ];\n\t\t\tconst sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tconst target = channel.target;\n\t\t\tconst name = target.node;\n\t\t\tconst input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tconst output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tif ( target.node === undefined ) continue;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tconst nodes = dependencies[ 0 ];\n\t\t\tconst inputAccessors = dependencies[ 1 ];\n\t\t\tconst outputAccessors = dependencies[ 2 ];\n\t\t\tconst samplers = dependencies[ 3 ];\n\t\t\tconst targets = dependencies[ 4 ];\n\n\t\t\tconst tracks = [];\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst node = nodes[ i ];\n\t\t\t\tconst inputAccessor = inputAccessors[ i ];\n\t\t\t\tconst outputAccessor = outputAccessors[ i ];\n\t\t\t\tconst sampler = samplers[ i ];\n\t\t\t\tconst target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tif ( node.updateMatrix ) {\n\n\t\t\t\t\tnode.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tconst createdTracks = parser._createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target );\n\n\t\t\t\tif ( createdTracks ) {\n\n\t\t\t\t\tfor ( let k = 0; k < createdTracks.length; k ++ ) {\n\n\t\t\t\t\t\ttracks.push( createdTracks[ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst animation = new AnimationClip( animationName, undefined, tracks );\n\n\t\t\tassignExtrasToUserData( animation, animationDef );\n\n\t\t\treturn animation;\n\n\t\t} );\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( nodeDef.mesh === undefined ) return null;\n\n\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\tconst node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\tfor ( let i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t *\n\t * @private\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tloadNode( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tconst nodePending = parser._loadNodeShallow( nodeIndex );\n\n\t\tconst childPending = [];\n\t\tconst childrenDef = nodeDef.children || [];\n\n\t\tfor ( let i = 0, il = childrenDef.length; i < il; i ++ ) {\n\n\t\t\tchildPending.push( parser.getDependency( 'node', childrenDef[ i ] ) );\n\n\t\t}\n\n\t\tconst skeletonPending = nodeDef.skin === undefined\n\t\t\t? Promise.resolve( null )\n\t\t\t: parser.getDependency( 'skin', nodeDef.skin );\n\n\t\treturn Promise.all( [\n\t\t\tnodePending,\n\t\t\tPromise.all( childPending ),\n\t\t\tskeletonPending\n\t\t] ).then( function ( results ) {\n\n\t\t\tconst node = results[ 0 ];\n\t\t\tconst children = results[ 1 ];\n\t\t\tconst skeleton = results[ 2 ];\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\t// This full traverse should be fine because\n\t\t\t\t// child glTF nodes have not been added to this node yet.\n\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\tif ( ! mesh.isSkinnedMesh ) return;\n\n\t\t\t\t\tmesh.bind( skeleton, _identityMatrix );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\tnode.add( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t// ._loadNodeShallow() parses a single node.\n\t// skin and child nodes are created and added in .loadNode() (no '_' prefix).\n\t_loadNodeShallow( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst parser = this;\n\n\t\t// This method is called from .loadNode() and .loadSkin().\n\t\t// Cache a node to avoid duplication.\n\n\t\tif ( this.nodeCache[ nodeIndex ] !== undefined ) {\n\n\t\t\treturn this.nodeCache[ nodeIndex ];\n\n\t\t}\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\t// reserve node's name before its dependencies, so the root has the intended name.\n\t\tconst nodeName = nodeDef.name ? parser.createUniqueName( nodeDef.name ) : '';\n\n\t\tconst pending = [];\n\n\t\tconst meshPromise = parser._invokeOne( function ( ext ) {\n\n\t\t\treturn ext.createNodeMesh && ext.createNodeMesh( nodeIndex );\n\n\t\t} );\n\n\t\tif ( meshPromise ) {\n\n\t\t\tpending.push( meshPromise );\n\n\t\t}\n\n\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tparser._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.createNodeAttachment && ext.createNodeAttachment( nodeIndex );\n\n\t\t} ).forEach( function ( promise ) {\n\n\t\t\tpending.push( promise );\n\n\t\t} );\n\n\t\tthis.nodeCache[ nodeIndex ] = Promise.all( pending ).then( function ( objects ) {\n\n\t\t\tlet node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( let i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = nodeName;\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tconst matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! parser.associations.has( node ) ) {\n\n\t\t\t\tparser.associations.set( node, {} );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined && parser.meshCache.refs[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\tconst mapping = parser.associations.get( node );\n\t\t\t\tparser.associations.set( node, { ...mapping } );\n\n\t\t\t}\n\n\t\t\tparser.associations.get( node ).nodes = nodeIndex;\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t\treturn this.nodeCache[ nodeIndex ];\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t *\n\t * @private\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tloadScene( sceneIndex ) {\n\n\t\tconst extensions = this.extensions;\n\t\tconst sceneDef = this.json.scenes[ sceneIndex ];\n\t\tconst parser = this;\n\n\t\t// Loader returns Group, not Scene.\n\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\tconst scene = new Group();\n\t\tif ( sceneDef.name ) scene.name = parser.createUniqueName( sceneDef.name );\n\n\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\tconst nodeIds = sceneDef.nodes || [];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\tpending.push( parser.getDependency( 'node', nodeIds[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( nodes ) {\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tscene.add( nodes[ i ] );\n\n\t\t\t}\n\n\t\t\t// Removes dangling associations, associations that reference a node that\n\t\t\t// didn't make it into the scene.\n\t\t\tconst reduceAssociations = ( node ) => {\n\n\t\t\t\tconst reducedAssociations = new Map();\n\n\t\t\t\tfor ( const [ key, value ] of parser.associations ) {\n\n\t\t\t\t\tif ( key instanceof Material || key instanceof Texture ) {\n\n\t\t\t\t\t\treducedAssociations.set( key, value );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tnode.traverse( ( node ) => {\n\n\t\t\t\t\tconst mappings = parser.associations.get( node );\n\n\t\t\t\t\tif ( mappings != null ) {\n\n\t\t\t\t\t\treducedAssociations.set( node, mappings );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn reducedAssociations;\n\n\t\t\t};\n\n\t\t\tparser.associations = reduceAssociations( scene );\n\n\t\t\treturn scene;\n\n\t\t} );\n\n\t}\n\n\t_createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target ) {\n\n\t\tconst tracks = [];\n\n\t\tconst targetName = node.name ? node.name : node.uuid;\n\t\tconst targetNames = [];\n\n\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\ttargetNames.push( targetName );\n\n\t\t}\n\n\t\tlet TypedKeyframeTrack;\n\n\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.translation:\n\t\t\tcase PATH_PROPERTIES.scale:\n\n\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tswitch ( outputAccessor.itemSize ) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\tcase 3:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tconst interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\n\t\tconst outputArray = this._getArrayFromAccessor( outputAccessor );\n\n\t\tfor ( let j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\tconst track = new TypedKeyframeTrack(\n\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\tinputAccessor.array,\n\t\t\t\toutputArray,\n\t\t\t\tinterpolation\n\t\t\t);\n\n\t\t\t// Override interpolation with custom factory method.\n\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\tthis._createCubicSplineTrackInterpolant( track );\n\n\t\t\t}\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\t_getArrayFromAccessor( accessor ) {\n\n\t\tlet outputArray = accessor.array;\n\n\t\tif ( accessor.normalized ) {\n\n\t\t\tconst scale = getNormalizedComponentScale( outputArray.constructor );\n\t\t\tconst scaled = new Float32Array( outputArray.length );\n\n\t\t\tfor ( let j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t}\n\n\t\t\toutputArray = scaled;\n\n\t\t}\n\n\t\treturn outputArray;\n\n\t}\n\n\t_createCubicSplineTrackInterpolant( track ) {\n\n\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\tconst interpolantType = ( this instanceof QuaternionKeyframeTrack ) ? GLTFCubicSplineQuaternionInterpolant : GLTFCubicSplineInterpolant;\n\n\t\t\treturn new interpolantType( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t};\n\n\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n */\nfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst box = new Box3();\n\n\tif ( attributes.POSITION !== undefined ) {\n\n\t\tconst accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\tconst min = accessor.min;\n\t\tconst max = accessor.max;\n\n\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\tbox.set(\n\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] )\n\t\t\t);\n\n\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\tbox.min.multiplyScalar( boxScale );\n\t\t\t\tbox.max.multiplyScalar( boxScale );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t} else {\n\n\t\treturn;\n\n\t}\n\n\tconst targets = primitiveDef.targets;\n\n\tif ( targets !== undefined ) {\n\n\t\tconst maxDisplacement = new Vector3();\n\t\tconst vector = new Vector3();\n\n\t\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tconst target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\tconst accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\tconst min = accessor.min;\n\t\t\t\tconst max = accessor.max;\n\n\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\n\t\t\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\t\t\tvector.multiplyScalar( boxScale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\tbox.expandByVector( maxDisplacement );\n\n\t}\n\n\tgeometry.boundingBox = box;\n\n\tconst sphere = new Sphere();\n\n\tbox.getCenter( sphere.center );\n\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\tgeometry.boundingSphere = sphere;\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst pending = [];\n\n\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t.then( function ( accessor ) {\n\n\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t} );\n\n\t}\n\n\tfor ( const gltfAttributeName in attributes ) {\n\n\t\tconst threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t}\n\n\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\tconst accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\tgeometry.setIndex( accessor );\n\n\t\t} );\n\n\t\tpending.push( accessor );\n\n\t}\n\n\tif ( ColorManagement.workingColorSpace !== LinearSRGBColorSpace && 'COLOR_0' in attributes ) {\n\n\t\tconsole.warn( `THREE.GLTFLoader: Converting vertex colors from \"srgb-linear\" to \"${ColorManagement.workingColorSpace}\" not supported.` );\n\n\t}\n\n\tassignExtrasToUserData( geometry, primitiveDef );\n\n\tcomputeBounds( geometry, primitiveDef, parser );\n\n\treturn Promise.all( pending ).then( function () {\n\n\t\treturn primitiveDef.targets !== undefined\n\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t: geometry;\n\n\t} );\n\n}\n\n/**\n * Loader result of `GLTFLoader`.\n *\n * @typedef {Object} GLTFLoader~LoadObject\n * @property {Array<AnimationClip>} animations - An array of animation clips.\n * @property {Object} asset - Meta data about the loaded asset.\n * @property {Array<Camera>} cameras - An array of cameras.\n * @property {GLTFParser} parser - A reference to the internal parser.\n * @property {Group} scene - The default scene.\n * @property {Array<Group>} scenes - glTF assets might define multiple scenes.\n * @property {Object} userData - Additional data.\n **/\n\nexport { GLTFLoader };\n"],"names":["computeMikkTSpaceTangents","geometry","MikkTSpace","negateSign","getAttributeArray","attribute","dstArray","i","j","_geometry","tangents","BufferAttribute","mergeGeometries","geometries","useGroups","isIndexed","attributesUsed","morphAttributesUsed","attributes","morphAttributes","morphTargetsRelative","mergedGeometry","BufferGeometry","offset","attributesCount","name","count","indexOffset","mergedIndex","index","mergedAttribute","mergeAttributes","numMorphTargets","morphAttributesToMerge","mergedMorphAttribute","TypedArray","itemSize","normalized","gpuType","arrayLength","array","result","tupleOffset","l","c","value","deepCloneAttribute","deinterleaveAttribute","InstancedBufferAttribute","interleaveAttributes","stride","interleavedBuffer","InterleavedBuffer","res","getters","setters","iba","InterleavedBufferAttribute","k","cons","newAttribute","deinterleaveGeometry","morphTargets","attrMap","key","attr","estimateBytesUsed","mem","indices","mergeVertices","tolerance","hashToIndex","positions","vertexCount","nextIndex","attributeNames","tmpAttributes","tmpMorphAttributes","newIndices","morphAttr","halfTolerance","exponent","hashMultiplier","hashAdditive","hash","newArray","newMorphArrays","getterFunc","setterFunc","m","ml","tmpAttribute","tmpMorphAttribute","toTrianglesDrawMode","drawMode","TrianglesDrawMode","TriangleFanDrawMode","TriangleStripDrawMode","position","numberOfTriangles","newGeometry","computeMorphedAttributes","object","_vA","Vector3","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_calculateMorphedAttributeData","morphAttribute","a","b","modifiedAttributeArray","morphInfluences","il","influence","morph","material","positionAttribute","morphPosition","normalAttribute","morphNormal","groups","drawRange","jl","group","start","end","modifiedPosition","modifiedNormal","morphedPositionAttribute","Float32BufferAttribute","morphedNormalAttribute","mergeGroups","groupStart","groupLength","currentGroup","toCreasedNormals","creaseAngle","creaseDot","verts","tempVec1","tempVec2","tempNorm","tempNorm2","hashVertex","v","x","y","z","resultGeometry","posAttr","vertexMap","i3","normal","n","vert","normalArray","normAttr","otherNormals","lk","otherNorm","GLTFLoader","Loader","manager","parser","GLTFMaterialsClearcoatExtension","GLTFMaterialsDispersionExtension","GLTFTextureBasisUExtension","GLTFTextureWebPExtension","GLTFTextureAVIFExtension","GLTFMaterialsSheenExtension","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","GLTFMaterialsIorExtension","GLTFMaterialsEmissiveStrengthExtension","GLTFMaterialsSpecularExtension","GLTFMaterialsIridescenceExtension","GLTFMaterialsAnisotropyExtension","GLTFMaterialsBumpExtension","GLTFLightsExtension","GLTFMeshoptCompression","GLTFMeshGpuInstancing","url","onLoad","onProgress","onError","scope","resourcePath","relativeUrl","LoaderUtils","_onError","e","loader","FileLoader","data","gltf","dracoLoader","ktx2Loader","meshoptDecoder","callback","path","json","extensions","plugins","textDecoder","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","GLTFBinaryExtension","error","GLTFParser","plugin","extensionName","extensionsRequired","GLTFMaterialsUnlitExtension","GLTFDracoMeshCompressionExtension","GLTFTextureTransformExtension","GLTFMeshQuantizationExtension","resolve","reject","GLTFRegistry","objects","nodeDefs","nodeIndex","nodeLength","nodeDef","lightIndex","cacheKey","dependency","lightDef","lightNode","color","Color","LinearSRGBColorSpace","range","DirectionalLight","PointLight","SpotLight","assignExtrasToUserData","type","self","light","MeshBasicMaterial","materialParams","materialDef","pending","metallicRoughness","SRGBColorSpace","materialIndex","emissiveStrength","MeshPhysicalMaterial","extension","scale","Vector2","colorFactor","colorArray","textureIndex","textureDef","source","handler","bufferView","extensionDef","buffer","decoder","byteOffset","byteLength","meshDef","primitive","WEBGL_CONSTANTS","attributesDef","accessor","results","nodeObject","meshes","instancedMeshes","mesh","Matrix4","p","q","Quaternion","s","instancedMesh","InstancedMesh","attributeName","Object3D","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","headerView","chunkContentsLength","chunkView","chunkIndex","chunkLength","chunkType","contentArray","bufferViewIndex","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","threeAttributeName","ATTRIBUTES","accessorDef","componentType","WEBGL_COMPONENT_TYPES","texture","transform","GLTFCubicSplineInterpolant","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","values","valueSize","i1","t0","t","t1","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","_quaternion","GLTFCubicSplineQuaternionInterpolant","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","PATH_PROPERTIES","INTERPOLATION","InterpolateLinear","InterpolateDiscrete","ALPHA_MODES","createDefaultMaterial","cache","MeshStandardMaterial","FrontSide","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfDef","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","hasMorphColor","target","pendingPositionAccessors","pendingNormalAccessors","pendingColorAccessors","pendingAccessor","accessors","morphPositions","morphNormals","morphColors","updateMorphTargets","targetNames","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","createAttributesKey","attributesKey","keys","getNormalizedComponentScale","constructor","getImageURIMimeType","uri","_identityMatrix","options","isSafari","safariVersion","isFirefox","firefoxVersion","userAgent","safariMatch","TextureLoader","ImageBitmapLoader","ext","dependencies","scene","skinDefs","meshDefs","skinIndex","skinLength","joints","ref","updateMappings","original","clone","mappings","child","func","defs","def","bufferIndex","bufferDef","bufferViewDef","accessorIndex","pendingBufferViews","bufferViews","elementBytes","itemBytes","byteStride","bufferAttribute","ibSlice","ibCacheKey","ib","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","sourceIndex","sourceDef","promise","sampler","URL","sourceURI","isObjectURL","blob","imageBitmap","Texture","mapName","mapDef","colorSpace","gltfReference","useDerivativeTangents","useVertexColors","useFlatShading","pointsMaterial","PointsMaterial","Material","lineMaterial","LineBasicMaterial","cachedMaterial","materialType","materialExtensions","kmuExtension","DoubleSide","alphaMode","emissiveFactor","originalName","sanitizedName","PropertyBinding","primitives","createDracoPrimitive","addPrimitiveAttributes","cached","geometryPromise","meshIndex","materials","SkinnedMesh","Mesh","LineSegments","Line","LineLoop","Points","Group","cameraIndex","camera","cameraDef","params","PerspectiveCamera","MathUtils","OrthographicCamera","skinDef","inverseBindMatrices","jointNodes","bones","boneInverses","jointNode","mat","Skeleton","animationIndex","animationDef","animationName","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channel","input","output","nodes","inputAccessors","outputAccessors","samplers","tracks","node","inputAccessor","outputAccessor","createdTracks","animation","AnimationClip","o","nodePending","childPending","childrenDef","skeletonPending","children","skeleton","nodeName","meshPromise","Bone","matrix","mapping","sceneIndex","sceneDef","nodeIds","reduceAssociations","reducedAssociations","targetName","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","interpolation","outputArray","track","scaled","interpolantType","computeBounds","box","Box3","min","max","boxScale","maxDisplacement","vector","sphere","Sphere","assignAttributeAccessor","gltfAttributeName","ColorManagement"],"mappings":"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","x_google_ignoreList":[0,1]}